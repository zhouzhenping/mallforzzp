<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.ReplicationApplierConfigurationMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.ReplicationApplierConfiguration">
    <id column="CHANNEL_NAME" jdbcType="CHAR" property="channelName" />
    <result column="DESIRED_DELAY" jdbcType="INTEGER" property="desiredDelay" />
    <result column="REQUIRE_ROW_FORMAT" jdbcType="CHAR" property="requireRowFormat" />
    <result column="REQUIRE_TABLE_PRIMARY_KEY_CHECK" jdbcType="CHAR" property="requireTablePrimaryKeyCheck" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzp.mall.model.ReplicationApplierConfiguration">
    <result column="PRIVILEGE_CHECKS_USER" jdbcType="LONGVARCHAR" property="privilegeChecksUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CHANNEL_NAME, DESIRED_DELAY, REQUIRE_ROW_FORMAT, REQUIRE_TABLE_PRIMARY_KEY_CHECK
  </sql>
  <sql id="Blob_Column_List">
    PRIVILEGE_CHECKS_USER
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzp.mall.model.ReplicationApplierConfigurationExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_applier_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzp.mall.model.ReplicationApplierConfigurationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replication_applier_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_applier_configuration
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from replication_applier_configuration
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.ReplicationApplierConfigurationExample">
    delete from replication_applier_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.ReplicationApplierConfiguration">
    insert into replication_applier_configuration (CHANNEL_NAME, DESIRED_DELAY, REQUIRE_ROW_FORMAT, 
      REQUIRE_TABLE_PRIMARY_KEY_CHECK, PRIVILEGE_CHECKS_USER
      )
    values (#{channelName,jdbcType=CHAR}, #{desiredDelay,jdbcType=INTEGER}, #{requireRowFormat,jdbcType=CHAR}, 
      #{requireTablePrimaryKeyCheck,jdbcType=CHAR}, #{privilegeChecksUser,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.ReplicationApplierConfiguration">
    insert into replication_applier_configuration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        CHANNEL_NAME,
      </if>
      <if test="desiredDelay != null">
        DESIRED_DELAY,
      </if>
      <if test="requireRowFormat != null">
        REQUIRE_ROW_FORMAT,
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        REQUIRE_TABLE_PRIMARY_KEY_CHECK,
      </if>
      <if test="privilegeChecksUser != null">
        PRIVILEGE_CHECKS_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="desiredDelay != null">
        #{desiredDelay,jdbcType=INTEGER},
      </if>
      <if test="requireRowFormat != null">
        #{requireRowFormat,jdbcType=CHAR},
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="privilegeChecksUser != null">
        #{privilegeChecksUser,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.ReplicationApplierConfigurationExample" resultType="java.lang.Integer">
    select count(*) from replication_applier_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update replication_applier_configuration
    <set>
      <if test="record.channelName != null">
        CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.desiredDelay != null">
        DESIRED_DELAY = #{record.desiredDelay,jdbcType=INTEGER},
      </if>
      <if test="record.requireRowFormat != null">
        REQUIRE_ROW_FORMAT = #{record.requireRowFormat,jdbcType=CHAR},
      </if>
      <if test="record.requireTablePrimaryKeyCheck != null">
        REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="record.privilegeChecksUser != null">
        PRIVILEGE_CHECKS_USER = #{record.privilegeChecksUser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update replication_applier_configuration
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      DESIRED_DELAY = #{record.desiredDelay,jdbcType=INTEGER},
      REQUIRE_ROW_FORMAT = #{record.requireRowFormat,jdbcType=CHAR},
      REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR},
      PRIVILEGE_CHECKS_USER = #{record.privilegeChecksUser,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update replication_applier_configuration
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      DESIRED_DELAY = #{record.desiredDelay,jdbcType=INTEGER},
      REQUIRE_ROW_FORMAT = #{record.requireRowFormat,jdbcType=CHAR},
      REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.ReplicationApplierConfiguration">
    update replication_applier_configuration
    <set>
      <if test="desiredDelay != null">
        DESIRED_DELAY = #{desiredDelay,jdbcType=INTEGER},
      </if>
      <if test="requireRowFormat != null">
        REQUIRE_ROW_FORMAT = #{requireRowFormat,jdbcType=CHAR},
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="privilegeChecksUser != null">
        PRIVILEGE_CHECKS_USER = #{privilegeChecksUser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzp.mall.model.ReplicationApplierConfiguration">
    update replication_applier_configuration
    set DESIRED_DELAY = #{desiredDelay,jdbcType=INTEGER},
      REQUIRE_ROW_FORMAT = #{requireRowFormat,jdbcType=CHAR},
      REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      PRIVILEGE_CHECKS_USER = #{privilegeChecksUser,jdbcType=LONGVARCHAR}
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.ReplicationApplierConfiguration">
    update replication_applier_configuration
    set DESIRED_DELAY = #{desiredDelay,jdbcType=INTEGER},
      REQUIRE_ROW_FORMAT = #{requireRowFormat,jdbcType=CHAR},
      REQUIRE_TABLE_PRIMARY_KEY_CHECK = #{requireTablePrimaryKeyCheck,jdbcType=CHAR}
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </update>
</mapper>