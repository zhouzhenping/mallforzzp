<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.UserDefinedFunctionsMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.UserDefinedFunctions">
    <id column="UDF_NAME" jdbcType="VARCHAR" property="udfName" />
    <result column="UDF_RETURN_TYPE" jdbcType="VARCHAR" property="udfReturnType" />
    <result column="UDF_TYPE" jdbcType="VARCHAR" property="udfType" />
    <result column="UDF_LIBRARY" jdbcType="VARCHAR" property="udfLibrary" />
    <result column="UDF_USAGE_COUNT" jdbcType="BIGINT" property="udfUsageCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UDF_NAME, UDF_RETURN_TYPE, UDF_TYPE, UDF_LIBRARY, UDF_USAGE_COUNT
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.UserDefinedFunctionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_defined_functions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_defined_functions
    where UDF_NAME = #{udfName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_defined_functions
    where UDF_NAME = #{udfName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.UserDefinedFunctionsExample">
    delete from user_defined_functions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.UserDefinedFunctions">
    insert into user_defined_functions (UDF_NAME, UDF_RETURN_TYPE, UDF_TYPE, 
      UDF_LIBRARY, UDF_USAGE_COUNT)
    values (#{udfName,jdbcType=VARCHAR}, #{udfReturnType,jdbcType=VARCHAR}, #{udfType,jdbcType=VARCHAR}, 
      #{udfLibrary,jdbcType=VARCHAR}, #{udfUsageCount,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.UserDefinedFunctions">
    insert into user_defined_functions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="udfName != null">
        UDF_NAME,
      </if>
      <if test="udfReturnType != null">
        UDF_RETURN_TYPE,
      </if>
      <if test="udfType != null">
        UDF_TYPE,
      </if>
      <if test="udfLibrary != null">
        UDF_LIBRARY,
      </if>
      <if test="udfUsageCount != null">
        UDF_USAGE_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="udfName != null">
        #{udfName,jdbcType=VARCHAR},
      </if>
      <if test="udfReturnType != null">
        #{udfReturnType,jdbcType=VARCHAR},
      </if>
      <if test="udfType != null">
        #{udfType,jdbcType=VARCHAR},
      </if>
      <if test="udfLibrary != null">
        #{udfLibrary,jdbcType=VARCHAR},
      </if>
      <if test="udfUsageCount != null">
        #{udfUsageCount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.UserDefinedFunctionsExample" resultType="java.lang.Integer">
    select count(*) from user_defined_functions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_defined_functions
    <set>
      <if test="record.udfName != null">
        UDF_NAME = #{record.udfName,jdbcType=VARCHAR},
      </if>
      <if test="record.udfReturnType != null">
        UDF_RETURN_TYPE = #{record.udfReturnType,jdbcType=VARCHAR},
      </if>
      <if test="record.udfType != null">
        UDF_TYPE = #{record.udfType,jdbcType=VARCHAR},
      </if>
      <if test="record.udfLibrary != null">
        UDF_LIBRARY = #{record.udfLibrary,jdbcType=VARCHAR},
      </if>
      <if test="record.udfUsageCount != null">
        UDF_USAGE_COUNT = #{record.udfUsageCount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_defined_functions
    set UDF_NAME = #{record.udfName,jdbcType=VARCHAR},
      UDF_RETURN_TYPE = #{record.udfReturnType,jdbcType=VARCHAR},
      UDF_TYPE = #{record.udfType,jdbcType=VARCHAR},
      UDF_LIBRARY = #{record.udfLibrary,jdbcType=VARCHAR},
      UDF_USAGE_COUNT = #{record.udfUsageCount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.UserDefinedFunctions">
    update user_defined_functions
    <set>
      <if test="udfReturnType != null">
        UDF_RETURN_TYPE = #{udfReturnType,jdbcType=VARCHAR},
      </if>
      <if test="udfType != null">
        UDF_TYPE = #{udfType,jdbcType=VARCHAR},
      </if>
      <if test="udfLibrary != null">
        UDF_LIBRARY = #{udfLibrary,jdbcType=VARCHAR},
      </if>
      <if test="udfUsageCount != null">
        UDF_USAGE_COUNT = #{udfUsageCount,jdbcType=BIGINT},
      </if>
    </set>
    where UDF_NAME = #{udfName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.UserDefinedFunctions">
    update user_defined_functions
    set UDF_RETURN_TYPE = #{udfReturnType,jdbcType=VARCHAR},
      UDF_TYPE = #{udfType,jdbcType=VARCHAR},
      UDF_LIBRARY = #{udfLibrary,jdbcType=VARCHAR},
      UDF_USAGE_COUNT = #{udfUsageCount,jdbcType=BIGINT}
    where UDF_NAME = #{udfName,jdbcType=VARCHAR}
  </update>
</mapper>