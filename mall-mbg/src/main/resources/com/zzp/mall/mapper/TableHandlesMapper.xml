<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.TableHandlesMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.TableHandles">
    <id column="OBJECT_INSTANCE_BEGIN" jdbcType="BIGINT" property="objectInstanceBegin" />
    <result column="OBJECT_TYPE" jdbcType="VARCHAR" property="objectType" />
    <result column="OBJECT_SCHEMA" jdbcType="VARCHAR" property="objectSchema" />
    <result column="OBJECT_NAME" jdbcType="VARCHAR" property="objectName" />
    <result column="OWNER_THREAD_ID" jdbcType="BIGINT" property="ownerThreadId" />
    <result column="OWNER_EVENT_ID" jdbcType="BIGINT" property="ownerEventId" />
    <result column="INTERNAL_LOCK" jdbcType="VARCHAR" property="internalLock" />
    <result column="EXTERNAL_LOCK" jdbcType="VARCHAR" property="externalLock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OBJECT_INSTANCE_BEGIN, OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, OWNER_THREAD_ID, 
    OWNER_EVENT_ID, INTERNAL_LOCK, EXTERNAL_LOCK
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.TableHandlesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_handles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from table_handles
    where OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from table_handles
    where OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.TableHandlesExample">
    delete from table_handles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.TableHandles">
    insert into table_handles (OBJECT_INSTANCE_BEGIN, OBJECT_TYPE, OBJECT_SCHEMA, 
      OBJECT_NAME, OWNER_THREAD_ID, OWNER_EVENT_ID, 
      INTERNAL_LOCK, EXTERNAL_LOCK)
    values (#{objectInstanceBegin,jdbcType=BIGINT}, #{objectType,jdbcType=VARCHAR}, #{objectSchema,jdbcType=VARCHAR}, 
      #{objectName,jdbcType=VARCHAR}, #{ownerThreadId,jdbcType=BIGINT}, #{ownerEventId,jdbcType=BIGINT}, 
      #{internalLock,jdbcType=VARCHAR}, #{externalLock,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.TableHandles">
    insert into table_handles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="objectInstanceBegin != null">
        OBJECT_INSTANCE_BEGIN,
      </if>
      <if test="objectType != null">
        OBJECT_TYPE,
      </if>
      <if test="objectSchema != null">
        OBJECT_SCHEMA,
      </if>
      <if test="objectName != null">
        OBJECT_NAME,
      </if>
      <if test="ownerThreadId != null">
        OWNER_THREAD_ID,
      </if>
      <if test="ownerEventId != null">
        OWNER_EVENT_ID,
      </if>
      <if test="internalLock != null">
        INTERNAL_LOCK,
      </if>
      <if test="externalLock != null">
        EXTERNAL_LOCK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="objectInstanceBegin != null">
        #{objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectSchema != null">
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="ownerThreadId != null">
        #{ownerThreadId,jdbcType=BIGINT},
      </if>
      <if test="ownerEventId != null">
        #{ownerEventId,jdbcType=BIGINT},
      </if>
      <if test="internalLock != null">
        #{internalLock,jdbcType=VARCHAR},
      </if>
      <if test="externalLock != null">
        #{externalLock,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.TableHandlesExample" resultType="java.lang.Integer">
    select count(*) from table_handles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update table_handles
    <set>
      <if test="record.objectInstanceBegin != null">
        OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="record.objectType != null">
        OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      </if>
      <if test="record.objectSchema != null">
        OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null">
        OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerThreadId != null">
        OWNER_THREAD_ID = #{record.ownerThreadId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerEventId != null">
        OWNER_EVENT_ID = #{record.ownerEventId,jdbcType=BIGINT},
      </if>
      <if test="record.internalLock != null">
        INTERNAL_LOCK = #{record.internalLock,jdbcType=VARCHAR},
      </if>
      <if test="record.externalLock != null">
        EXTERNAL_LOCK = #{record.externalLock,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update table_handles
    set OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      OWNER_THREAD_ID = #{record.ownerThreadId,jdbcType=BIGINT},
      OWNER_EVENT_ID = #{record.ownerEventId,jdbcType=BIGINT},
      INTERNAL_LOCK = #{record.internalLock,jdbcType=VARCHAR},
      EXTERNAL_LOCK = #{record.externalLock,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.TableHandles">
    update table_handles
    <set>
      <if test="objectType != null">
        OBJECT_TYPE = #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectSchema != null">
        OBJECT_SCHEMA = #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        OBJECT_NAME = #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="ownerThreadId != null">
        OWNER_THREAD_ID = #{ownerThreadId,jdbcType=BIGINT},
      </if>
      <if test="ownerEventId != null">
        OWNER_EVENT_ID = #{ownerEventId,jdbcType=BIGINT},
      </if>
      <if test="internalLock != null">
        INTERNAL_LOCK = #{internalLock,jdbcType=VARCHAR},
      </if>
      <if test="externalLock != null">
        EXTERNAL_LOCK = #{externalLock,jdbcType=VARCHAR},
      </if>
    </set>
    where OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.TableHandles">
    update table_handles
    set OBJECT_TYPE = #{objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{objectName,jdbcType=VARCHAR},
      OWNER_THREAD_ID = #{ownerThreadId,jdbcType=BIGINT},
      OWNER_EVENT_ID = #{ownerEventId,jdbcType=BIGINT},
      INTERNAL_LOCK = #{internalLock,jdbcType=VARCHAR},
      EXTERNAL_LOCK = #{externalLock,jdbcType=VARCHAR}
    where OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT}
  </update>
</mapper>