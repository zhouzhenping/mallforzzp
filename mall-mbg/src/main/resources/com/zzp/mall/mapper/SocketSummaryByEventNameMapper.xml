<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.SocketSummaryByEventNameMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.SocketSummaryByEventName">
    <id column="EVENT_NAME" jdbcType="VARCHAR" property="eventName" />
    <result column="COUNT_STAR" jdbcType="BIGINT" property="countStar" />
    <result column="SUM_TIMER_WAIT" jdbcType="BIGINT" property="sumTimerWait" />
    <result column="MIN_TIMER_WAIT" jdbcType="BIGINT" property="minTimerWait" />
    <result column="AVG_TIMER_WAIT" jdbcType="BIGINT" property="avgTimerWait" />
    <result column="MAX_TIMER_WAIT" jdbcType="BIGINT" property="maxTimerWait" />
    <result column="COUNT_READ" jdbcType="BIGINT" property="countRead" />
    <result column="SUM_TIMER_READ" jdbcType="BIGINT" property="sumTimerRead" />
    <result column="MIN_TIMER_READ" jdbcType="BIGINT" property="minTimerRead" />
    <result column="AVG_TIMER_READ" jdbcType="BIGINT" property="avgTimerRead" />
    <result column="MAX_TIMER_READ" jdbcType="BIGINT" property="maxTimerRead" />
    <result column="SUM_NUMBER_OF_BYTES_READ" jdbcType="BIGINT" property="sumNumberOfBytesRead" />
    <result column="COUNT_WRITE" jdbcType="BIGINT" property="countWrite" />
    <result column="SUM_TIMER_WRITE" jdbcType="BIGINT" property="sumTimerWrite" />
    <result column="MIN_TIMER_WRITE" jdbcType="BIGINT" property="minTimerWrite" />
    <result column="AVG_TIMER_WRITE" jdbcType="BIGINT" property="avgTimerWrite" />
    <result column="MAX_TIMER_WRITE" jdbcType="BIGINT" property="maxTimerWrite" />
    <result column="SUM_NUMBER_OF_BYTES_WRITE" jdbcType="BIGINT" property="sumNumberOfBytesWrite" />
    <result column="COUNT_MISC" jdbcType="BIGINT" property="countMisc" />
    <result column="SUM_TIMER_MISC" jdbcType="BIGINT" property="sumTimerMisc" />
    <result column="MIN_TIMER_MISC" jdbcType="BIGINT" property="minTimerMisc" />
    <result column="AVG_TIMER_MISC" jdbcType="BIGINT" property="avgTimerMisc" />
    <result column="MAX_TIMER_MISC" jdbcType="BIGINT" property="maxTimerMisc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EVENT_NAME, COUNT_STAR, SUM_TIMER_WAIT, MIN_TIMER_WAIT, AVG_TIMER_WAIT, MAX_TIMER_WAIT, 
    COUNT_READ, SUM_TIMER_READ, MIN_TIMER_READ, AVG_TIMER_READ, MAX_TIMER_READ, SUM_NUMBER_OF_BYTES_READ, 
    COUNT_WRITE, SUM_TIMER_WRITE, MIN_TIMER_WRITE, AVG_TIMER_WRITE, MAX_TIMER_WRITE, 
    SUM_NUMBER_OF_BYTES_WRITE, COUNT_MISC, SUM_TIMER_MISC, MIN_TIMER_MISC, AVG_TIMER_MISC, 
    MAX_TIMER_MISC
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.SocketSummaryByEventNameExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from socket_summary_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from socket_summary_by_event_name
    where EVENT_NAME = #{eventName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from socket_summary_by_event_name
    where EVENT_NAME = #{eventName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.SocketSummaryByEventNameExample">
    delete from socket_summary_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.SocketSummaryByEventName">
    insert into socket_summary_by_event_name (EVENT_NAME, COUNT_STAR, SUM_TIMER_WAIT, 
      MIN_TIMER_WAIT, AVG_TIMER_WAIT, MAX_TIMER_WAIT, 
      COUNT_READ, SUM_TIMER_READ, MIN_TIMER_READ, 
      AVG_TIMER_READ, MAX_TIMER_READ, SUM_NUMBER_OF_BYTES_READ, 
      COUNT_WRITE, SUM_TIMER_WRITE, MIN_TIMER_WRITE, 
      AVG_TIMER_WRITE, MAX_TIMER_WRITE, SUM_NUMBER_OF_BYTES_WRITE, 
      COUNT_MISC, SUM_TIMER_MISC, MIN_TIMER_MISC, 
      AVG_TIMER_MISC, MAX_TIMER_MISC)
    values (#{eventName,jdbcType=VARCHAR}, #{countStar,jdbcType=BIGINT}, #{sumTimerWait,jdbcType=BIGINT}, 
      #{minTimerWait,jdbcType=BIGINT}, #{avgTimerWait,jdbcType=BIGINT}, #{maxTimerWait,jdbcType=BIGINT}, 
      #{countRead,jdbcType=BIGINT}, #{sumTimerRead,jdbcType=BIGINT}, #{minTimerRead,jdbcType=BIGINT}, 
      #{avgTimerRead,jdbcType=BIGINT}, #{maxTimerRead,jdbcType=BIGINT}, #{sumNumberOfBytesRead,jdbcType=BIGINT}, 
      #{countWrite,jdbcType=BIGINT}, #{sumTimerWrite,jdbcType=BIGINT}, #{minTimerWrite,jdbcType=BIGINT}, 
      #{avgTimerWrite,jdbcType=BIGINT}, #{maxTimerWrite,jdbcType=BIGINT}, #{sumNumberOfBytesWrite,jdbcType=BIGINT}, 
      #{countMisc,jdbcType=BIGINT}, #{sumTimerMisc,jdbcType=BIGINT}, #{minTimerMisc,jdbcType=BIGINT}, 
      #{avgTimerMisc,jdbcType=BIGINT}, #{maxTimerMisc,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.SocketSummaryByEventName">
    insert into socket_summary_by_event_name
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        EVENT_NAME,
      </if>
      <if test="countStar != null">
        COUNT_STAR,
      </if>
      <if test="sumTimerWait != null">
        SUM_TIMER_WAIT,
      </if>
      <if test="minTimerWait != null">
        MIN_TIMER_WAIT,
      </if>
      <if test="avgTimerWait != null">
        AVG_TIMER_WAIT,
      </if>
      <if test="maxTimerWait != null">
        MAX_TIMER_WAIT,
      </if>
      <if test="countRead != null">
        COUNT_READ,
      </if>
      <if test="sumTimerRead != null">
        SUM_TIMER_READ,
      </if>
      <if test="minTimerRead != null">
        MIN_TIMER_READ,
      </if>
      <if test="avgTimerRead != null">
        AVG_TIMER_READ,
      </if>
      <if test="maxTimerRead != null">
        MAX_TIMER_READ,
      </if>
      <if test="sumNumberOfBytesRead != null">
        SUM_NUMBER_OF_BYTES_READ,
      </if>
      <if test="countWrite != null">
        COUNT_WRITE,
      </if>
      <if test="sumTimerWrite != null">
        SUM_TIMER_WRITE,
      </if>
      <if test="minTimerWrite != null">
        MIN_TIMER_WRITE,
      </if>
      <if test="avgTimerWrite != null">
        AVG_TIMER_WRITE,
      </if>
      <if test="maxTimerWrite != null">
        MAX_TIMER_WRITE,
      </if>
      <if test="sumNumberOfBytesWrite != null">
        SUM_NUMBER_OF_BYTES_WRITE,
      </if>
      <if test="countMisc != null">
        COUNT_MISC,
      </if>
      <if test="sumTimerMisc != null">
        SUM_TIMER_MISC,
      </if>
      <if test="minTimerMisc != null">
        MIN_TIMER_MISC,
      </if>
      <if test="avgTimerMisc != null">
        AVG_TIMER_MISC,
      </if>
      <if test="maxTimerMisc != null">
        MAX_TIMER_MISC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="countStar != null">
        #{countStar,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWait != null">
        #{sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="minTimerWait != null">
        #{minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWait != null">
        #{avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWait != null">
        #{maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="countRead != null">
        #{countRead,jdbcType=BIGINT},
      </if>
      <if test="sumTimerRead != null">
        #{sumTimerRead,jdbcType=BIGINT},
      </if>
      <if test="minTimerRead != null">
        #{minTimerRead,jdbcType=BIGINT},
      </if>
      <if test="avgTimerRead != null">
        #{avgTimerRead,jdbcType=BIGINT},
      </if>
      <if test="maxTimerRead != null">
        #{maxTimerRead,jdbcType=BIGINT},
      </if>
      <if test="sumNumberOfBytesRead != null">
        #{sumNumberOfBytesRead,jdbcType=BIGINT},
      </if>
      <if test="countWrite != null">
        #{countWrite,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWrite != null">
        #{sumTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="minTimerWrite != null">
        #{minTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWrite != null">
        #{avgTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWrite != null">
        #{maxTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="sumNumberOfBytesWrite != null">
        #{sumNumberOfBytesWrite,jdbcType=BIGINT},
      </if>
      <if test="countMisc != null">
        #{countMisc,jdbcType=BIGINT},
      </if>
      <if test="sumTimerMisc != null">
        #{sumTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="minTimerMisc != null">
        #{minTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="avgTimerMisc != null">
        #{avgTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="maxTimerMisc != null">
        #{maxTimerMisc,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.SocketSummaryByEventNameExample" resultType="java.lang.Integer">
    select count(*) from socket_summary_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update socket_summary_by_event_name
    <set>
      <if test="record.eventName != null">
        EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.countStar != null">
        COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerWait != null">
        SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerWait != null">
        MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerWait != null">
        AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerWait != null">
        MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.countRead != null">
        COUNT_READ = #{record.countRead,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerRead != null">
        SUM_TIMER_READ = #{record.sumTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerRead != null">
        MIN_TIMER_READ = #{record.minTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerRead != null">
        AVG_TIMER_READ = #{record.avgTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerRead != null">
        MAX_TIMER_READ = #{record.maxTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.sumNumberOfBytesRead != null">
        SUM_NUMBER_OF_BYTES_READ = #{record.sumNumberOfBytesRead,jdbcType=BIGINT},
      </if>
      <if test="record.countWrite != null">
        COUNT_WRITE = #{record.countWrite,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerWrite != null">
        SUM_TIMER_WRITE = #{record.sumTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerWrite != null">
        MIN_TIMER_WRITE = #{record.minTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerWrite != null">
        AVG_TIMER_WRITE = #{record.avgTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerWrite != null">
        MAX_TIMER_WRITE = #{record.maxTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.sumNumberOfBytesWrite != null">
        SUM_NUMBER_OF_BYTES_WRITE = #{record.sumNumberOfBytesWrite,jdbcType=BIGINT},
      </if>
      <if test="record.countMisc != null">
        COUNT_MISC = #{record.countMisc,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerMisc != null">
        SUM_TIMER_MISC = #{record.sumTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerMisc != null">
        MIN_TIMER_MISC = #{record.minTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerMisc != null">
        AVG_TIMER_MISC = #{record.avgTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerMisc != null">
        MAX_TIMER_MISC = #{record.maxTimerMisc,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update socket_summary_by_event_name
    set EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      COUNT_READ = #{record.countRead,jdbcType=BIGINT},
      SUM_TIMER_READ = #{record.sumTimerRead,jdbcType=BIGINT},
      MIN_TIMER_READ = #{record.minTimerRead,jdbcType=BIGINT},
      AVG_TIMER_READ = #{record.avgTimerRead,jdbcType=BIGINT},
      MAX_TIMER_READ = #{record.maxTimerRead,jdbcType=BIGINT},
      SUM_NUMBER_OF_BYTES_READ = #{record.sumNumberOfBytesRead,jdbcType=BIGINT},
      COUNT_WRITE = #{record.countWrite,jdbcType=BIGINT},
      SUM_TIMER_WRITE = #{record.sumTimerWrite,jdbcType=BIGINT},
      MIN_TIMER_WRITE = #{record.minTimerWrite,jdbcType=BIGINT},
      AVG_TIMER_WRITE = #{record.avgTimerWrite,jdbcType=BIGINT},
      MAX_TIMER_WRITE = #{record.maxTimerWrite,jdbcType=BIGINT},
      SUM_NUMBER_OF_BYTES_WRITE = #{record.sumNumberOfBytesWrite,jdbcType=BIGINT},
      COUNT_MISC = #{record.countMisc,jdbcType=BIGINT},
      SUM_TIMER_MISC = #{record.sumTimerMisc,jdbcType=BIGINT},
      MIN_TIMER_MISC = #{record.minTimerMisc,jdbcType=BIGINT},
      AVG_TIMER_MISC = #{record.avgTimerMisc,jdbcType=BIGINT},
      MAX_TIMER_MISC = #{record.maxTimerMisc,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.SocketSummaryByEventName">
    update socket_summary_by_event_name
    <set>
      <if test="countStar != null">
        COUNT_STAR = #{countStar,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWait != null">
        SUM_TIMER_WAIT = #{sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="minTimerWait != null">
        MIN_TIMER_WAIT = #{minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWait != null">
        AVG_TIMER_WAIT = #{avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWait != null">
        MAX_TIMER_WAIT = #{maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="countRead != null">
        COUNT_READ = #{countRead,jdbcType=BIGINT},
      </if>
      <if test="sumTimerRead != null">
        SUM_TIMER_READ = #{sumTimerRead,jdbcType=BIGINT},
      </if>
      <if test="minTimerRead != null">
        MIN_TIMER_READ = #{minTimerRead,jdbcType=BIGINT},
      </if>
      <if test="avgTimerRead != null">
        AVG_TIMER_READ = #{avgTimerRead,jdbcType=BIGINT},
      </if>
      <if test="maxTimerRead != null">
        MAX_TIMER_READ = #{maxTimerRead,jdbcType=BIGINT},
      </if>
      <if test="sumNumberOfBytesRead != null">
        SUM_NUMBER_OF_BYTES_READ = #{sumNumberOfBytesRead,jdbcType=BIGINT},
      </if>
      <if test="countWrite != null">
        COUNT_WRITE = #{countWrite,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWrite != null">
        SUM_TIMER_WRITE = #{sumTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="minTimerWrite != null">
        MIN_TIMER_WRITE = #{minTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWrite != null">
        AVG_TIMER_WRITE = #{avgTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWrite != null">
        MAX_TIMER_WRITE = #{maxTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="sumNumberOfBytesWrite != null">
        SUM_NUMBER_OF_BYTES_WRITE = #{sumNumberOfBytesWrite,jdbcType=BIGINT},
      </if>
      <if test="countMisc != null">
        COUNT_MISC = #{countMisc,jdbcType=BIGINT},
      </if>
      <if test="sumTimerMisc != null">
        SUM_TIMER_MISC = #{sumTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="minTimerMisc != null">
        MIN_TIMER_MISC = #{minTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="avgTimerMisc != null">
        AVG_TIMER_MISC = #{avgTimerMisc,jdbcType=BIGINT},
      </if>
      <if test="maxTimerMisc != null">
        MAX_TIMER_MISC = #{maxTimerMisc,jdbcType=BIGINT},
      </if>
    </set>
    where EVENT_NAME = #{eventName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.SocketSummaryByEventName">
    update socket_summary_by_event_name
    set COUNT_STAR = #{countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{maxTimerWait,jdbcType=BIGINT},
      COUNT_READ = #{countRead,jdbcType=BIGINT},
      SUM_TIMER_READ = #{sumTimerRead,jdbcType=BIGINT},
      MIN_TIMER_READ = #{minTimerRead,jdbcType=BIGINT},
      AVG_TIMER_READ = #{avgTimerRead,jdbcType=BIGINT},
      MAX_TIMER_READ = #{maxTimerRead,jdbcType=BIGINT},
      SUM_NUMBER_OF_BYTES_READ = #{sumNumberOfBytesRead,jdbcType=BIGINT},
      COUNT_WRITE = #{countWrite,jdbcType=BIGINT},
      SUM_TIMER_WRITE = #{sumTimerWrite,jdbcType=BIGINT},
      MIN_TIMER_WRITE = #{minTimerWrite,jdbcType=BIGINT},
      AVG_TIMER_WRITE = #{avgTimerWrite,jdbcType=BIGINT},
      MAX_TIMER_WRITE = #{maxTimerWrite,jdbcType=BIGINT},
      SUM_NUMBER_OF_BYTES_WRITE = #{sumNumberOfBytesWrite,jdbcType=BIGINT},
      COUNT_MISC = #{countMisc,jdbcType=BIGINT},
      SUM_TIMER_MISC = #{sumTimerMisc,jdbcType=BIGINT},
      MIN_TIMER_MISC = #{minTimerMisc,jdbcType=BIGINT},
      AVG_TIMER_MISC = #{avgTimerMisc,jdbcType=BIGINT},
      MAX_TIMER_MISC = #{maxTimerMisc,jdbcType=BIGINT}
    where EVENT_NAME = #{eventName,jdbcType=VARCHAR}
  </update>
</mapper>