<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.EventsWaitsCurrentMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.EventsWaitsCurrent">
    <id column="THREAD_ID" jdbcType="BIGINT" property="threadId" />
    <id column="EVENT_ID" jdbcType="BIGINT" property="eventId" />
    <result column="END_EVENT_ID" jdbcType="BIGINT" property="endEventId" />
    <result column="EVENT_NAME" jdbcType="VARCHAR" property="eventName" />
    <result column="SOURCE" jdbcType="VARCHAR" property="source" />
    <result column="TIMER_START" jdbcType="BIGINT" property="timerStart" />
    <result column="TIMER_END" jdbcType="BIGINT" property="timerEnd" />
    <result column="TIMER_WAIT" jdbcType="BIGINT" property="timerWait" />
    <result column="SPINS" jdbcType="INTEGER" property="spins" />
    <result column="OBJECT_SCHEMA" jdbcType="VARCHAR" property="objectSchema" />
    <result column="OBJECT_NAME" jdbcType="VARCHAR" property="objectName" />
    <result column="INDEX_NAME" jdbcType="VARCHAR" property="indexName" />
    <result column="OBJECT_TYPE" jdbcType="VARCHAR" property="objectType" />
    <result column="OBJECT_INSTANCE_BEGIN" jdbcType="BIGINT" property="objectInstanceBegin" />
    <result column="NESTING_EVENT_ID" jdbcType="BIGINT" property="nestingEventId" />
    <result column="NESTING_EVENT_TYPE" jdbcType="CHAR" property="nestingEventType" />
    <result column="OPERATION" jdbcType="VARCHAR" property="operation" />
    <result column="NUMBER_OF_BYTES" jdbcType="BIGINT" property="numberOfBytes" />
    <result column="FLAGS" jdbcType="INTEGER" property="flags" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    THREAD_ID, EVENT_ID, END_EVENT_ID, EVENT_NAME, SOURCE, TIMER_START, TIMER_END, TIMER_WAIT, 
    SPINS, OBJECT_SCHEMA, OBJECT_NAME, INDEX_NAME, OBJECT_TYPE, OBJECT_INSTANCE_BEGIN, 
    NESTING_EVENT_ID, NESTING_EVENT_TYPE, OPERATION, NUMBER_OF_BYTES, FLAGS
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.EventsWaitsCurrentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from events_waits_current
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from events_waits_current
    where THREAD_ID = #{threadId,jdbcType=BIGINT}
      and EVENT_ID = #{eventId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from events_waits_current
    where THREAD_ID = #{threadId,jdbcType=BIGINT}
      and EVENT_ID = #{eventId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.EventsWaitsCurrentExample">
    delete from events_waits_current
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.EventsWaitsCurrent">
    insert into events_waits_current (THREAD_ID, EVENT_ID, END_EVENT_ID, 
      EVENT_NAME, SOURCE, TIMER_START, 
      TIMER_END, TIMER_WAIT, SPINS, 
      OBJECT_SCHEMA, OBJECT_NAME, INDEX_NAME, 
      OBJECT_TYPE, OBJECT_INSTANCE_BEGIN, NESTING_EVENT_ID, 
      NESTING_EVENT_TYPE, OPERATION, NUMBER_OF_BYTES, 
      FLAGS)
    values (#{threadId,jdbcType=BIGINT}, #{eventId,jdbcType=BIGINT}, #{endEventId,jdbcType=BIGINT}, 
      #{eventName,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{timerStart,jdbcType=BIGINT}, 
      #{timerEnd,jdbcType=BIGINT}, #{timerWait,jdbcType=BIGINT}, #{spins,jdbcType=INTEGER}, 
      #{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{objectType,jdbcType=VARCHAR}, #{objectInstanceBegin,jdbcType=BIGINT}, #{nestingEventId,jdbcType=BIGINT}, 
      #{nestingEventType,jdbcType=CHAR}, #{operation,jdbcType=VARCHAR}, #{numberOfBytes,jdbcType=BIGINT}, 
      #{flags,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.EventsWaitsCurrent">
    insert into events_waits_current
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="threadId != null">
        THREAD_ID,
      </if>
      <if test="eventId != null">
        EVENT_ID,
      </if>
      <if test="endEventId != null">
        END_EVENT_ID,
      </if>
      <if test="eventName != null">
        EVENT_NAME,
      </if>
      <if test="source != null">
        SOURCE,
      </if>
      <if test="timerStart != null">
        TIMER_START,
      </if>
      <if test="timerEnd != null">
        TIMER_END,
      </if>
      <if test="timerWait != null">
        TIMER_WAIT,
      </if>
      <if test="spins != null">
        SPINS,
      </if>
      <if test="objectSchema != null">
        OBJECT_SCHEMA,
      </if>
      <if test="objectName != null">
        OBJECT_NAME,
      </if>
      <if test="indexName != null">
        INDEX_NAME,
      </if>
      <if test="objectType != null">
        OBJECT_TYPE,
      </if>
      <if test="objectInstanceBegin != null">
        OBJECT_INSTANCE_BEGIN,
      </if>
      <if test="nestingEventId != null">
        NESTING_EVENT_ID,
      </if>
      <if test="nestingEventType != null">
        NESTING_EVENT_TYPE,
      </if>
      <if test="operation != null">
        OPERATION,
      </if>
      <if test="numberOfBytes != null">
        NUMBER_OF_BYTES,
      </if>
      <if test="flags != null">
        FLAGS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="threadId != null">
        #{threadId,jdbcType=BIGINT},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="endEventId != null">
        #{endEventId,jdbcType=BIGINT},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="timerStart != null">
        #{timerStart,jdbcType=BIGINT},
      </if>
      <if test="timerEnd != null">
        #{timerEnd,jdbcType=BIGINT},
      </if>
      <if test="timerWait != null">
        #{timerWait,jdbcType=BIGINT},
      </if>
      <if test="spins != null">
        #{spins,jdbcType=INTEGER},
      </if>
      <if test="objectSchema != null">
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectInstanceBegin != null">
        #{objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="nestingEventId != null">
        #{nestingEventId,jdbcType=BIGINT},
      </if>
      <if test="nestingEventType != null">
        #{nestingEventType,jdbcType=CHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="numberOfBytes != null">
        #{numberOfBytes,jdbcType=BIGINT},
      </if>
      <if test="flags != null">
        #{flags,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.EventsWaitsCurrentExample" resultType="java.lang.Integer">
    select count(*) from events_waits_current
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update events_waits_current
    <set>
      <if test="record.threadId != null">
        THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      </if>
      <if test="record.eventId != null">
        EVENT_ID = #{record.eventId,jdbcType=BIGINT},
      </if>
      <if test="record.endEventId != null">
        END_EVENT_ID = #{record.endEventId,jdbcType=BIGINT},
      </if>
      <if test="record.eventName != null">
        EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        SOURCE = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.timerStart != null">
        TIMER_START = #{record.timerStart,jdbcType=BIGINT},
      </if>
      <if test="record.timerEnd != null">
        TIMER_END = #{record.timerEnd,jdbcType=BIGINT},
      </if>
      <if test="record.timerWait != null">
        TIMER_WAIT = #{record.timerWait,jdbcType=BIGINT},
      </if>
      <if test="record.spins != null">
        SPINS = #{record.spins,jdbcType=INTEGER},
      </if>
      <if test="record.objectSchema != null">
        OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null">
        OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.objectType != null">
        OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      </if>
      <if test="record.objectInstanceBegin != null">
        OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="record.nestingEventId != null">
        NESTING_EVENT_ID = #{record.nestingEventId,jdbcType=BIGINT},
      </if>
      <if test="record.nestingEventType != null">
        NESTING_EVENT_TYPE = #{record.nestingEventType,jdbcType=CHAR},
      </if>
      <if test="record.operation != null">
        OPERATION = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.numberOfBytes != null">
        NUMBER_OF_BYTES = #{record.numberOfBytes,jdbcType=BIGINT},
      </if>
      <if test="record.flags != null">
        FLAGS = #{record.flags,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update events_waits_current
    set THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      EVENT_ID = #{record.eventId,jdbcType=BIGINT},
      END_EVENT_ID = #{record.endEventId,jdbcType=BIGINT},
      EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      SOURCE = #{record.source,jdbcType=VARCHAR},
      TIMER_START = #{record.timerStart,jdbcType=BIGINT},
      TIMER_END = #{record.timerEnd,jdbcType=BIGINT},
      TIMER_WAIT = #{record.timerWait,jdbcType=BIGINT},
      SPINS = #{record.spins,jdbcType=INTEGER},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      NESTING_EVENT_ID = #{record.nestingEventId,jdbcType=BIGINT},
      NESTING_EVENT_TYPE = #{record.nestingEventType,jdbcType=CHAR},
      OPERATION = #{record.operation,jdbcType=VARCHAR},
      NUMBER_OF_BYTES = #{record.numberOfBytes,jdbcType=BIGINT},
      FLAGS = #{record.flags,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.EventsWaitsCurrent">
    update events_waits_current
    <set>
      <if test="endEventId != null">
        END_EVENT_ID = #{endEventId,jdbcType=BIGINT},
      </if>
      <if test="eventName != null">
        EVENT_NAME = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        SOURCE = #{source,jdbcType=VARCHAR},
      </if>
      <if test="timerStart != null">
        TIMER_START = #{timerStart,jdbcType=BIGINT},
      </if>
      <if test="timerEnd != null">
        TIMER_END = #{timerEnd,jdbcType=BIGINT},
      </if>
      <if test="timerWait != null">
        TIMER_WAIT = #{timerWait,jdbcType=BIGINT},
      </if>
      <if test="spins != null">
        SPINS = #{spins,jdbcType=INTEGER},
      </if>
      <if test="objectSchema != null">
        OBJECT_SCHEMA = #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        OBJECT_NAME = #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        INDEX_NAME = #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        OBJECT_TYPE = #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectInstanceBegin != null">
        OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="nestingEventId != null">
        NESTING_EVENT_ID = #{nestingEventId,jdbcType=BIGINT},
      </if>
      <if test="nestingEventType != null">
        NESTING_EVENT_TYPE = #{nestingEventType,jdbcType=CHAR},
      </if>
      <if test="operation != null">
        OPERATION = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="numberOfBytes != null">
        NUMBER_OF_BYTES = #{numberOfBytes,jdbcType=BIGINT},
      </if>
      <if test="flags != null">
        FLAGS = #{flags,jdbcType=INTEGER},
      </if>
    </set>
    where THREAD_ID = #{threadId,jdbcType=BIGINT}
      and EVENT_ID = #{eventId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.EventsWaitsCurrent">
    update events_waits_current
    set END_EVENT_ID = #{endEventId,jdbcType=BIGINT},
      EVENT_NAME = #{eventName,jdbcType=VARCHAR},
      SOURCE = #{source,jdbcType=VARCHAR},
      TIMER_START = #{timerStart,jdbcType=BIGINT},
      TIMER_END = #{timerEnd,jdbcType=BIGINT},
      TIMER_WAIT = #{timerWait,jdbcType=BIGINT},
      SPINS = #{spins,jdbcType=INTEGER},
      OBJECT_SCHEMA = #{objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{objectName,jdbcType=VARCHAR},
      INDEX_NAME = #{indexName,jdbcType=VARCHAR},
      OBJECT_TYPE = #{objectType,jdbcType=VARCHAR},
      OBJECT_INSTANCE_BEGIN = #{objectInstanceBegin,jdbcType=BIGINT},
      NESTING_EVENT_ID = #{nestingEventId,jdbcType=BIGINT},
      NESTING_EVENT_TYPE = #{nestingEventType,jdbcType=CHAR},
      OPERATION = #{operation,jdbcType=VARCHAR},
      NUMBER_OF_BYTES = #{numberOfBytes,jdbcType=BIGINT},
      FLAGS = #{flags,jdbcType=INTEGER}
    where THREAD_ID = #{threadId,jdbcType=BIGINT}
      and EVENT_ID = #{eventId,jdbcType=BIGINT}
  </update>
</mapper>