<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.RoleRoutineGrantsMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.RoleRoutineGrants">
    <result column="GRANTOR" jdbcType="VARCHAR" property="grantor" />
    <result column="GRANTOR_HOST" jdbcType="VARCHAR" property="grantorHost" />
    <result column="GRANTEE" jdbcType="CHAR" property="grantee" />
    <result column="GRANTEE_HOST" jdbcType="CHAR" property="granteeHost" />
    <result column="SPECIFIC_CATALOG" jdbcType="VARCHAR" property="specificCatalog" />
    <result column="SPECIFIC_SCHEMA" jdbcType="CHAR" property="specificSchema" />
    <result column="SPECIFIC_NAME" jdbcType="CHAR" property="specificName" />
    <result column="ROUTINE_CATALOG" jdbcType="VARCHAR" property="routineCatalog" />
    <result column="ROUTINE_SCHEMA" jdbcType="CHAR" property="routineSchema" />
    <result column="ROUTINE_NAME" jdbcType="CHAR" property="routineName" />
    <result column="PRIVILEGE_TYPE" jdbcType="CHAR" property="privilegeType" />
    <result column="IS_GRANTABLE" jdbcType="VARCHAR" property="isGrantable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GRANTOR, GRANTOR_HOST, GRANTEE, GRANTEE_HOST, SPECIFIC_CATALOG, SPECIFIC_SCHEMA, 
    SPECIFIC_NAME, ROUTINE_CATALOG, ROUTINE_SCHEMA, ROUTINE_NAME, PRIVILEGE_TYPE, IS_GRANTABLE
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.RoleRoutineGrantsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE_ROUTINE_GRANTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.RoleRoutineGrantsExample">
    delete from ROLE_ROUTINE_GRANTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.RoleRoutineGrants">
    insert into ROLE_ROUTINE_GRANTS (GRANTOR, GRANTOR_HOST, GRANTEE, 
      GRANTEE_HOST, SPECIFIC_CATALOG, SPECIFIC_SCHEMA, 
      SPECIFIC_NAME, ROUTINE_CATALOG, ROUTINE_SCHEMA, 
      ROUTINE_NAME, PRIVILEGE_TYPE, IS_GRANTABLE
      )
    values (#{grantor,jdbcType=VARCHAR}, #{grantorHost,jdbcType=VARCHAR}, #{grantee,jdbcType=CHAR}, 
      #{granteeHost,jdbcType=CHAR}, #{specificCatalog,jdbcType=VARCHAR}, #{specificSchema,jdbcType=CHAR}, 
      #{specificName,jdbcType=CHAR}, #{routineCatalog,jdbcType=VARCHAR}, #{routineSchema,jdbcType=CHAR}, 
      #{routineName,jdbcType=CHAR}, #{privilegeType,jdbcType=CHAR}, #{isGrantable,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.RoleRoutineGrants">
    insert into ROLE_ROUTINE_GRANTS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="grantor != null">
        GRANTOR,
      </if>
      <if test="grantorHost != null">
        GRANTOR_HOST,
      </if>
      <if test="grantee != null">
        GRANTEE,
      </if>
      <if test="granteeHost != null">
        GRANTEE_HOST,
      </if>
      <if test="specificCatalog != null">
        SPECIFIC_CATALOG,
      </if>
      <if test="specificSchema != null">
        SPECIFIC_SCHEMA,
      </if>
      <if test="specificName != null">
        SPECIFIC_NAME,
      </if>
      <if test="routineCatalog != null">
        ROUTINE_CATALOG,
      </if>
      <if test="routineSchema != null">
        ROUTINE_SCHEMA,
      </if>
      <if test="routineName != null">
        ROUTINE_NAME,
      </if>
      <if test="privilegeType != null">
        PRIVILEGE_TYPE,
      </if>
      <if test="isGrantable != null">
        IS_GRANTABLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="grantor != null">
        #{grantor,jdbcType=VARCHAR},
      </if>
      <if test="grantorHost != null">
        #{grantorHost,jdbcType=VARCHAR},
      </if>
      <if test="grantee != null">
        #{grantee,jdbcType=CHAR},
      </if>
      <if test="granteeHost != null">
        #{granteeHost,jdbcType=CHAR},
      </if>
      <if test="specificCatalog != null">
        #{specificCatalog,jdbcType=VARCHAR},
      </if>
      <if test="specificSchema != null">
        #{specificSchema,jdbcType=CHAR},
      </if>
      <if test="specificName != null">
        #{specificName,jdbcType=CHAR},
      </if>
      <if test="routineCatalog != null">
        #{routineCatalog,jdbcType=VARCHAR},
      </if>
      <if test="routineSchema != null">
        #{routineSchema,jdbcType=CHAR},
      </if>
      <if test="routineName != null">
        #{routineName,jdbcType=CHAR},
      </if>
      <if test="privilegeType != null">
        #{privilegeType,jdbcType=CHAR},
      </if>
      <if test="isGrantable != null">
        #{isGrantable,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.RoleRoutineGrantsExample" resultType="java.lang.Integer">
    select count(*) from ROLE_ROUTINE_GRANTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ROLE_ROUTINE_GRANTS
    <set>
      <if test="record.grantor != null">
        GRANTOR = #{record.grantor,jdbcType=VARCHAR},
      </if>
      <if test="record.grantorHost != null">
        GRANTOR_HOST = #{record.grantorHost,jdbcType=VARCHAR},
      </if>
      <if test="record.grantee != null">
        GRANTEE = #{record.grantee,jdbcType=CHAR},
      </if>
      <if test="record.granteeHost != null">
        GRANTEE_HOST = #{record.granteeHost,jdbcType=CHAR},
      </if>
      <if test="record.specificCatalog != null">
        SPECIFIC_CATALOG = #{record.specificCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.specificSchema != null">
        SPECIFIC_SCHEMA = #{record.specificSchema,jdbcType=CHAR},
      </if>
      <if test="record.specificName != null">
        SPECIFIC_NAME = #{record.specificName,jdbcType=CHAR},
      </if>
      <if test="record.routineCatalog != null">
        ROUTINE_CATALOG = #{record.routineCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.routineSchema != null">
        ROUTINE_SCHEMA = #{record.routineSchema,jdbcType=CHAR},
      </if>
      <if test="record.routineName != null">
        ROUTINE_NAME = #{record.routineName,jdbcType=CHAR},
      </if>
      <if test="record.privilegeType != null">
        PRIVILEGE_TYPE = #{record.privilegeType,jdbcType=CHAR},
      </if>
      <if test="record.isGrantable != null">
        IS_GRANTABLE = #{record.isGrantable,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ROLE_ROUTINE_GRANTS
    set GRANTOR = #{record.grantor,jdbcType=VARCHAR},
      GRANTOR_HOST = #{record.grantorHost,jdbcType=VARCHAR},
      GRANTEE = #{record.grantee,jdbcType=CHAR},
      GRANTEE_HOST = #{record.granteeHost,jdbcType=CHAR},
      SPECIFIC_CATALOG = #{record.specificCatalog,jdbcType=VARCHAR},
      SPECIFIC_SCHEMA = #{record.specificSchema,jdbcType=CHAR},
      SPECIFIC_NAME = #{record.specificName,jdbcType=CHAR},
      ROUTINE_CATALOG = #{record.routineCatalog,jdbcType=VARCHAR},
      ROUTINE_SCHEMA = #{record.routineSchema,jdbcType=CHAR},
      ROUTINE_NAME = #{record.routineName,jdbcType=CHAR},
      PRIVILEGE_TYPE = #{record.privilegeType,jdbcType=CHAR},
      IS_GRANTABLE = #{record.isGrantable,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>