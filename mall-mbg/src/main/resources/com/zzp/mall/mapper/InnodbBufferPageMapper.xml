<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.InnodbBufferPageMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.InnodbBufferPage">
    <result column="POOL_ID" jdbcType="BIGINT" property="poolId" />
    <result column="BLOCK_ID" jdbcType="BIGINT" property="blockId" />
    <result column="SPACE" jdbcType="BIGINT" property="space" />
    <result column="PAGE_NUMBER" jdbcType="BIGINT" property="pageNumber" />
    <result column="PAGE_TYPE" jdbcType="VARCHAR" property="pageType" />
    <result column="FLUSH_TYPE" jdbcType="BIGINT" property="flushType" />
    <result column="FIX_COUNT" jdbcType="BIGINT" property="fixCount" />
    <result column="IS_HASHED" jdbcType="VARCHAR" property="isHashed" />
    <result column="NEWEST_MODIFICATION" jdbcType="BIGINT" property="newestModification" />
    <result column="OLDEST_MODIFICATION" jdbcType="BIGINT" property="oldestModification" />
    <result column="ACCESS_TIME" jdbcType="BIGINT" property="accessTime" />
    <result column="TABLE_NAME" jdbcType="VARCHAR" property="tableName" />
    <result column="INDEX_NAME" jdbcType="VARCHAR" property="indexName" />
    <result column="NUMBER_RECORDS" jdbcType="BIGINT" property="numberRecords" />
    <result column="DATA_SIZE" jdbcType="BIGINT" property="dataSize" />
    <result column="COMPRESSED_SIZE" jdbcType="BIGINT" property="compressedSize" />
    <result column="PAGE_STATE" jdbcType="VARCHAR" property="pageState" />
    <result column="IO_FIX" jdbcType="VARCHAR" property="ioFix" />
    <result column="IS_OLD" jdbcType="VARCHAR" property="isOld" />
    <result column="FREE_PAGE_CLOCK" jdbcType="BIGINT" property="freePageClock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    POOL_ID, BLOCK_ID, SPACE, PAGE_NUMBER, PAGE_TYPE, FLUSH_TYPE, FIX_COUNT, IS_HASHED, 
    NEWEST_MODIFICATION, OLDEST_MODIFICATION, ACCESS_TIME, TABLE_NAME, INDEX_NAME, NUMBER_RECORDS, 
    DATA_SIZE, COMPRESSED_SIZE, PAGE_STATE, IO_FIX, IS_OLD, FREE_PAGE_CLOCK
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.InnodbBufferPageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INNODB_BUFFER_PAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.InnodbBufferPageExample">
    delete from INNODB_BUFFER_PAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.InnodbBufferPage">
    insert into INNODB_BUFFER_PAGE (POOL_ID, BLOCK_ID, SPACE, 
      PAGE_NUMBER, PAGE_TYPE, FLUSH_TYPE, 
      FIX_COUNT, IS_HASHED, NEWEST_MODIFICATION, 
      OLDEST_MODIFICATION, ACCESS_TIME, TABLE_NAME, 
      INDEX_NAME, NUMBER_RECORDS, DATA_SIZE, 
      COMPRESSED_SIZE, PAGE_STATE, IO_FIX, 
      IS_OLD, FREE_PAGE_CLOCK)
    values (#{poolId,jdbcType=BIGINT}, #{blockId,jdbcType=BIGINT}, #{space,jdbcType=BIGINT}, 
      #{pageNumber,jdbcType=BIGINT}, #{pageType,jdbcType=VARCHAR}, #{flushType,jdbcType=BIGINT}, 
      #{fixCount,jdbcType=BIGINT}, #{isHashed,jdbcType=VARCHAR}, #{newestModification,jdbcType=BIGINT}, 
      #{oldestModification,jdbcType=BIGINT}, #{accessTime,jdbcType=BIGINT}, #{tableName,jdbcType=VARCHAR}, 
      #{indexName,jdbcType=VARCHAR}, #{numberRecords,jdbcType=BIGINT}, #{dataSize,jdbcType=BIGINT}, 
      #{compressedSize,jdbcType=BIGINT}, #{pageState,jdbcType=VARCHAR}, #{ioFix,jdbcType=VARCHAR}, 
      #{isOld,jdbcType=VARCHAR}, #{freePageClock,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.InnodbBufferPage">
    insert into INNODB_BUFFER_PAGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        POOL_ID,
      </if>
      <if test="blockId != null">
        BLOCK_ID,
      </if>
      <if test="space != null">
        SPACE,
      </if>
      <if test="pageNumber != null">
        PAGE_NUMBER,
      </if>
      <if test="pageType != null">
        PAGE_TYPE,
      </if>
      <if test="flushType != null">
        FLUSH_TYPE,
      </if>
      <if test="fixCount != null">
        FIX_COUNT,
      </if>
      <if test="isHashed != null">
        IS_HASHED,
      </if>
      <if test="newestModification != null">
        NEWEST_MODIFICATION,
      </if>
      <if test="oldestModification != null">
        OLDEST_MODIFICATION,
      </if>
      <if test="accessTime != null">
        ACCESS_TIME,
      </if>
      <if test="tableName != null">
        TABLE_NAME,
      </if>
      <if test="indexName != null">
        INDEX_NAME,
      </if>
      <if test="numberRecords != null">
        NUMBER_RECORDS,
      </if>
      <if test="dataSize != null">
        DATA_SIZE,
      </if>
      <if test="compressedSize != null">
        COMPRESSED_SIZE,
      </if>
      <if test="pageState != null">
        PAGE_STATE,
      </if>
      <if test="ioFix != null">
        IO_FIX,
      </if>
      <if test="isOld != null">
        IS_OLD,
      </if>
      <if test="freePageClock != null">
        FREE_PAGE_CLOCK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        #{poolId,jdbcType=BIGINT},
      </if>
      <if test="blockId != null">
        #{blockId,jdbcType=BIGINT},
      </if>
      <if test="space != null">
        #{space,jdbcType=BIGINT},
      </if>
      <if test="pageNumber != null">
        #{pageNumber,jdbcType=BIGINT},
      </if>
      <if test="pageType != null">
        #{pageType,jdbcType=VARCHAR},
      </if>
      <if test="flushType != null">
        #{flushType,jdbcType=BIGINT},
      </if>
      <if test="fixCount != null">
        #{fixCount,jdbcType=BIGINT},
      </if>
      <if test="isHashed != null">
        #{isHashed,jdbcType=VARCHAR},
      </if>
      <if test="newestModification != null">
        #{newestModification,jdbcType=BIGINT},
      </if>
      <if test="oldestModification != null">
        #{oldestModification,jdbcType=BIGINT},
      </if>
      <if test="accessTime != null">
        #{accessTime,jdbcType=BIGINT},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="numberRecords != null">
        #{numberRecords,jdbcType=BIGINT},
      </if>
      <if test="dataSize != null">
        #{dataSize,jdbcType=BIGINT},
      </if>
      <if test="compressedSize != null">
        #{compressedSize,jdbcType=BIGINT},
      </if>
      <if test="pageState != null">
        #{pageState,jdbcType=VARCHAR},
      </if>
      <if test="ioFix != null">
        #{ioFix,jdbcType=VARCHAR},
      </if>
      <if test="isOld != null">
        #{isOld,jdbcType=VARCHAR},
      </if>
      <if test="freePageClock != null">
        #{freePageClock,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.InnodbBufferPageExample" resultType="java.lang.Integer">
    select count(*) from INNODB_BUFFER_PAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update INNODB_BUFFER_PAGE
    <set>
      <if test="record.poolId != null">
        POOL_ID = #{record.poolId,jdbcType=BIGINT},
      </if>
      <if test="record.blockId != null">
        BLOCK_ID = #{record.blockId,jdbcType=BIGINT},
      </if>
      <if test="record.space != null">
        SPACE = #{record.space,jdbcType=BIGINT},
      </if>
      <if test="record.pageNumber != null">
        PAGE_NUMBER = #{record.pageNumber,jdbcType=BIGINT},
      </if>
      <if test="record.pageType != null">
        PAGE_TYPE = #{record.pageType,jdbcType=VARCHAR},
      </if>
      <if test="record.flushType != null">
        FLUSH_TYPE = #{record.flushType,jdbcType=BIGINT},
      </if>
      <if test="record.fixCount != null">
        FIX_COUNT = #{record.fixCount,jdbcType=BIGINT},
      </if>
      <if test="record.isHashed != null">
        IS_HASHED = #{record.isHashed,jdbcType=VARCHAR},
      </if>
      <if test="record.newestModification != null">
        NEWEST_MODIFICATION = #{record.newestModification,jdbcType=BIGINT},
      </if>
      <if test="record.oldestModification != null">
        OLDEST_MODIFICATION = #{record.oldestModification,jdbcType=BIGINT},
      </if>
      <if test="record.accessTime != null">
        ACCESS_TIME = #{record.accessTime,jdbcType=BIGINT},
      </if>
      <if test="record.tableName != null">
        TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.numberRecords != null">
        NUMBER_RECORDS = #{record.numberRecords,jdbcType=BIGINT},
      </if>
      <if test="record.dataSize != null">
        DATA_SIZE = #{record.dataSize,jdbcType=BIGINT},
      </if>
      <if test="record.compressedSize != null">
        COMPRESSED_SIZE = #{record.compressedSize,jdbcType=BIGINT},
      </if>
      <if test="record.pageState != null">
        PAGE_STATE = #{record.pageState,jdbcType=VARCHAR},
      </if>
      <if test="record.ioFix != null">
        IO_FIX = #{record.ioFix,jdbcType=VARCHAR},
      </if>
      <if test="record.isOld != null">
        IS_OLD = #{record.isOld,jdbcType=VARCHAR},
      </if>
      <if test="record.freePageClock != null">
        FREE_PAGE_CLOCK = #{record.freePageClock,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update INNODB_BUFFER_PAGE
    set POOL_ID = #{record.poolId,jdbcType=BIGINT},
      BLOCK_ID = #{record.blockId,jdbcType=BIGINT},
      SPACE = #{record.space,jdbcType=BIGINT},
      PAGE_NUMBER = #{record.pageNumber,jdbcType=BIGINT},
      PAGE_TYPE = #{record.pageType,jdbcType=VARCHAR},
      FLUSH_TYPE = #{record.flushType,jdbcType=BIGINT},
      FIX_COUNT = #{record.fixCount,jdbcType=BIGINT},
      IS_HASHED = #{record.isHashed,jdbcType=VARCHAR},
      NEWEST_MODIFICATION = #{record.newestModification,jdbcType=BIGINT},
      OLDEST_MODIFICATION = #{record.oldestModification,jdbcType=BIGINT},
      ACCESS_TIME = #{record.accessTime,jdbcType=BIGINT},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      NUMBER_RECORDS = #{record.numberRecords,jdbcType=BIGINT},
      DATA_SIZE = #{record.dataSize,jdbcType=BIGINT},
      COMPRESSED_SIZE = #{record.compressedSize,jdbcType=BIGINT},
      PAGE_STATE = #{record.pageState,jdbcType=VARCHAR},
      IO_FIX = #{record.ioFix,jdbcType=VARCHAR},
      IS_OLD = #{record.isOld,jdbcType=VARCHAR},
      FREE_PAGE_CLOCK = #{record.freePageClock,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>