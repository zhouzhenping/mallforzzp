<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.SlaveRelayLogInfoMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.SlaveRelayLogInfo">
    <id column="Channel_name" jdbcType="CHAR" property="channelName" />
    <result column="Number_of_lines" jdbcType="INTEGER" property="numberOfLines" />
    <result column="Relay_log_pos" jdbcType="BIGINT" property="relayLogPos" />
    <result column="Master_log_pos" jdbcType="BIGINT" property="masterLogPos" />
    <result column="Sql_delay" jdbcType="INTEGER" property="sqlDelay" />
    <result column="Number_of_workers" jdbcType="INTEGER" property="numberOfWorkers" />
    <result column="Id" jdbcType="INTEGER" property="id" />
    <result column="Privilege_checks_username" jdbcType="CHAR" property="privilegeChecksUsername" />
    <result column="Privilege_checks_hostname" jdbcType="CHAR" property="privilegeChecksHostname" />
    <result column="Require_row_format" jdbcType="BIT" property="requireRowFormat" />
    <result column="Require_table_primary_key_check" jdbcType="CHAR" property="requireTablePrimaryKeyCheck" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzp.mall.model.SlaveRelayLogInfo">
    <result column="Relay_log_name" jdbcType="LONGVARCHAR" property="relayLogName" />
    <result column="Master_log_name" jdbcType="LONGVARCHAR" property="masterLogName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Channel_name, Number_of_lines, Relay_log_pos, Master_log_pos, Sql_delay, Number_of_workers, 
    Id, Privilege_checks_username, Privilege_checks_hostname, Require_row_format, Require_table_primary_key_check
  </sql>
  <sql id="Blob_Column_List">
    Relay_log_name, Master_log_name
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzp.mall.model.SlaveRelayLogInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_relay_log_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzp.mall.model.SlaveRelayLogInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slave_relay_log_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_relay_log_info
    where Channel_name = #{channelName,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from slave_relay_log_info
    where Channel_name = #{channelName,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.SlaveRelayLogInfoExample">
    delete from slave_relay_log_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.SlaveRelayLogInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into slave_relay_log_info (Channel_name, Number_of_lines, Relay_log_pos, 
      Master_log_pos, Sql_delay, Number_of_workers, 
      Id, Privilege_checks_username, Privilege_checks_hostname, 
      Require_row_format, Require_table_primary_key_check, 
      Relay_log_name, Master_log_name)
    values (#{channelName,jdbcType=CHAR}, #{numberOfLines,jdbcType=INTEGER}, #{relayLogPos,jdbcType=BIGINT}, 
      #{masterLogPos,jdbcType=BIGINT}, #{sqlDelay,jdbcType=INTEGER}, #{numberOfWorkers,jdbcType=INTEGER}, 
      #{id,jdbcType=INTEGER}, #{privilegeChecksUsername,jdbcType=CHAR}, #{privilegeChecksHostname,jdbcType=CHAR}, 
      #{requireRowFormat,jdbcType=BIT}, #{requireTablePrimaryKeyCheck,jdbcType=CHAR}, 
      #{relayLogName,jdbcType=LONGVARCHAR}, #{masterLogName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.SlaveRelayLogInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into slave_relay_log_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        Channel_name,
      </if>
      <if test="numberOfLines != null">
        Number_of_lines,
      </if>
      <if test="relayLogPos != null">
        Relay_log_pos,
      </if>
      <if test="masterLogPos != null">
        Master_log_pos,
      </if>
      <if test="sqlDelay != null">
        Sql_delay,
      </if>
      <if test="numberOfWorkers != null">
        Number_of_workers,
      </if>
      Id,
      <if test="privilegeChecksUsername != null">
        Privilege_checks_username,
      </if>
      <if test="privilegeChecksHostname != null">
        Privilege_checks_hostname,
      </if>
      <if test="requireRowFormat != null">
        Require_row_format,
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        Require_table_primary_key_check,
      </if>
      <if test="relayLogName != null">
        Relay_log_name,
      </if>
      <if test="masterLogName != null">
        Master_log_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="numberOfLines != null">
        #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null">
        #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null">
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="sqlDelay != null">
        #{sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="numberOfWorkers != null">
        #{numberOfWorkers,jdbcType=INTEGER},
      </if>
      #{id,jdbcType=INTEGER},
      <if test="privilegeChecksUsername != null">
        #{privilegeChecksUsername,jdbcType=CHAR},
      </if>
      <if test="privilegeChecksHostname != null">
        #{privilegeChecksHostname,jdbcType=CHAR},
      </if>
      <if test="requireRowFormat != null">
        #{requireRowFormat,jdbcType=BIT},
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="relayLogName != null">
        #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null">
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.SlaveRelayLogInfoExample" resultType="java.lang.Integer">
    select count(*) from slave_relay_log_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update slave_relay_log_info
    <set>
      <if test="record.channelName != null">
        Channel_name = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.numberOfLines != null">
        Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="record.relayLogPos != null">
        Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.masterLogPos != null">
        Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.sqlDelay != null">
        Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="record.numberOfWorkers != null">
        Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.privilegeChecksUsername != null">
        Privilege_checks_username = #{record.privilegeChecksUsername,jdbcType=CHAR},
      </if>
      <if test="record.privilegeChecksHostname != null">
        Privilege_checks_hostname = #{record.privilegeChecksHostname,jdbcType=CHAR},
      </if>
      <if test="record.requireRowFormat != null">
        Require_row_format = #{record.requireRowFormat,jdbcType=BIT},
      </if>
      <if test="record.requireTablePrimaryKeyCheck != null">
        Require_table_primary_key_check = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="record.relayLogName != null">
        Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.masterLogName != null">
        Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update slave_relay_log_info
    set Channel_name = #{record.channelName,jdbcType=CHAR},
      Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      Id = #{record.id,jdbcType=INTEGER},
      Privilege_checks_username = #{record.privilegeChecksUsername,jdbcType=CHAR},
      Privilege_checks_hostname = #{record.privilegeChecksHostname,jdbcType=CHAR},
      Require_row_format = #{record.requireRowFormat,jdbcType=BIT},
      Require_table_primary_key_check = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR},
      Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update slave_relay_log_info
    set Channel_name = #{record.channelName,jdbcType=CHAR},
      Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      Id = #{record.id,jdbcType=INTEGER},
      Privilege_checks_username = #{record.privilegeChecksUsername,jdbcType=CHAR},
      Privilege_checks_hostname = #{record.privilegeChecksHostname,jdbcType=CHAR},
      Require_row_format = #{record.requireRowFormat,jdbcType=BIT},
      Require_table_primary_key_check = #{record.requireTablePrimaryKeyCheck,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.SlaveRelayLogInfo">
    update slave_relay_log_info
    <set>
      <if test="numberOfLines != null">
        Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null">
        Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null">
        Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="sqlDelay != null">
        Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="numberOfWorkers != null">
        Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        Id = #{id,jdbcType=INTEGER},
      </if>
      <if test="privilegeChecksUsername != null">
        Privilege_checks_username = #{privilegeChecksUsername,jdbcType=CHAR},
      </if>
      <if test="privilegeChecksHostname != null">
        Privilege_checks_hostname = #{privilegeChecksHostname,jdbcType=CHAR},
      </if>
      <if test="requireRowFormat != null">
        Require_row_format = #{requireRowFormat,jdbcType=BIT},
      </if>
      <if test="requireTablePrimaryKeyCheck != null">
        Require_table_primary_key_check = #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      </if>
      <if test="relayLogName != null">
        Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null">
        Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzp.mall.model.SlaveRelayLogInfo">
    update slave_relay_log_info
    set Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      Id = #{id,jdbcType=INTEGER},
      Privilege_checks_username = #{privilegeChecksUsername,jdbcType=CHAR},
      Privilege_checks_hostname = #{privilegeChecksHostname,jdbcType=CHAR},
      Require_row_format = #{requireRowFormat,jdbcType=BIT},
      Require_table_primary_key_check = #{requireTablePrimaryKeyCheck,jdbcType=CHAR},
      Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR}
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.SlaveRelayLogInfo">
    update slave_relay_log_info
    set Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      Id = #{id,jdbcType=INTEGER},
      Privilege_checks_username = #{privilegeChecksUsername,jdbcType=CHAR},
      Privilege_checks_hostname = #{privilegeChecksHostname,jdbcType=CHAR},
      Require_row_format = #{requireRowFormat,jdbcType=BIT},
      Require_table_primary_key_check = #{requireTablePrimaryKeyCheck,jdbcType=CHAR}
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
</mapper>