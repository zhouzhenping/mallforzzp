<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.PerformanceTimersMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.PerformanceTimers">
    <result column="TIMER_NAME" jdbcType="CHAR" property="timerName" />
    <result column="TIMER_FREQUENCY" jdbcType="BIGINT" property="timerFrequency" />
    <result column="TIMER_RESOLUTION" jdbcType="BIGINT" property="timerResolution" />
    <result column="TIMER_OVERHEAD" jdbcType="BIGINT" property="timerOverhead" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TIMER_NAME, TIMER_FREQUENCY, TIMER_RESOLUTION, TIMER_OVERHEAD
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.PerformanceTimersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from performance_timers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.PerformanceTimersExample">
    delete from performance_timers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.PerformanceTimers">
    insert into performance_timers (TIMER_NAME, TIMER_FREQUENCY, TIMER_RESOLUTION, 
      TIMER_OVERHEAD)
    values (#{timerName,jdbcType=CHAR}, #{timerFrequency,jdbcType=BIGINT}, #{timerResolution,jdbcType=BIGINT}, 
      #{timerOverhead,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.PerformanceTimers">
    insert into performance_timers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="timerName != null">
        TIMER_NAME,
      </if>
      <if test="timerFrequency != null">
        TIMER_FREQUENCY,
      </if>
      <if test="timerResolution != null">
        TIMER_RESOLUTION,
      </if>
      <if test="timerOverhead != null">
        TIMER_OVERHEAD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="timerName != null">
        #{timerName,jdbcType=CHAR},
      </if>
      <if test="timerFrequency != null">
        #{timerFrequency,jdbcType=BIGINT},
      </if>
      <if test="timerResolution != null">
        #{timerResolution,jdbcType=BIGINT},
      </if>
      <if test="timerOverhead != null">
        #{timerOverhead,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.PerformanceTimersExample" resultType="java.lang.Integer">
    select count(*) from performance_timers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update performance_timers
    <set>
      <if test="record.timerName != null">
        TIMER_NAME = #{record.timerName,jdbcType=CHAR},
      </if>
      <if test="record.timerFrequency != null">
        TIMER_FREQUENCY = #{record.timerFrequency,jdbcType=BIGINT},
      </if>
      <if test="record.timerResolution != null">
        TIMER_RESOLUTION = #{record.timerResolution,jdbcType=BIGINT},
      </if>
      <if test="record.timerOverhead != null">
        TIMER_OVERHEAD = #{record.timerOverhead,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update performance_timers
    set TIMER_NAME = #{record.timerName,jdbcType=CHAR},
      TIMER_FREQUENCY = #{record.timerFrequency,jdbcType=BIGINT},
      TIMER_RESOLUTION = #{record.timerResolution,jdbcType=BIGINT},
      TIMER_OVERHEAD = #{record.timerOverhead,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>