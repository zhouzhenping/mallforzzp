<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.InnodbCmpPerIndexResetMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.InnodbCmpPerIndexReset">
    <result column="database_name" jdbcType="VARCHAR" property="databaseName" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="compress_ops" jdbcType="INTEGER" property="compressOps" />
    <result column="compress_ops_ok" jdbcType="INTEGER" property="compressOpsOk" />
    <result column="compress_time" jdbcType="INTEGER" property="compressTime" />
    <result column="uncompress_ops" jdbcType="INTEGER" property="uncompressOps" />
    <result column="uncompress_time" jdbcType="INTEGER" property="uncompressTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    database_name, table_name, index_name, compress_ops, compress_ops_ok, compress_time, 
    uncompress_ops, uncompress_time
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.InnodbCmpPerIndexResetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INNODB_CMP_PER_INDEX_RESET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.InnodbCmpPerIndexResetExample">
    delete from INNODB_CMP_PER_INDEX_RESET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.InnodbCmpPerIndexReset">
    insert into INNODB_CMP_PER_INDEX_RESET (database_name, table_name, index_name, 
      compress_ops, compress_ops_ok, compress_time, 
      uncompress_ops, uncompress_time)
    values (#{databaseName,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{compressOps,jdbcType=INTEGER}, #{compressOpsOk,jdbcType=INTEGER}, #{compressTime,jdbcType=INTEGER}, 
      #{uncompressOps,jdbcType=INTEGER}, #{uncompressTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.InnodbCmpPerIndexReset">
    insert into INNODB_CMP_PER_INDEX_RESET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="databaseName != null">
        database_name,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="compressOps != null">
        compress_ops,
      </if>
      <if test="compressOpsOk != null">
        compress_ops_ok,
      </if>
      <if test="compressTime != null">
        compress_time,
      </if>
      <if test="uncompressOps != null">
        uncompress_ops,
      </if>
      <if test="uncompressTime != null">
        uncompress_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="databaseName != null">
        #{databaseName,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="compressOps != null">
        #{compressOps,jdbcType=INTEGER},
      </if>
      <if test="compressOpsOk != null">
        #{compressOpsOk,jdbcType=INTEGER},
      </if>
      <if test="compressTime != null">
        #{compressTime,jdbcType=INTEGER},
      </if>
      <if test="uncompressOps != null">
        #{uncompressOps,jdbcType=INTEGER},
      </if>
      <if test="uncompressTime != null">
        #{uncompressTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.InnodbCmpPerIndexResetExample" resultType="java.lang.Integer">
    select count(*) from INNODB_CMP_PER_INDEX_RESET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update INNODB_CMP_PER_INDEX_RESET
    <set>
      <if test="record.databaseName != null">
        database_name = #{record.databaseName,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.compressOps != null">
        compress_ops = #{record.compressOps,jdbcType=INTEGER},
      </if>
      <if test="record.compressOpsOk != null">
        compress_ops_ok = #{record.compressOpsOk,jdbcType=INTEGER},
      </if>
      <if test="record.compressTime != null">
        compress_time = #{record.compressTime,jdbcType=INTEGER},
      </if>
      <if test="record.uncompressOps != null">
        uncompress_ops = #{record.uncompressOps,jdbcType=INTEGER},
      </if>
      <if test="record.uncompressTime != null">
        uncompress_time = #{record.uncompressTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update INNODB_CMP_PER_INDEX_RESET
    set database_name = #{record.databaseName,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      compress_ops = #{record.compressOps,jdbcType=INTEGER},
      compress_ops_ok = #{record.compressOpsOk,jdbcType=INTEGER},
      compress_time = #{record.compressTime,jdbcType=INTEGER},
      uncompress_ops = #{record.uncompressOps,jdbcType=INTEGER},
      uncompress_time = #{record.uncompressTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>