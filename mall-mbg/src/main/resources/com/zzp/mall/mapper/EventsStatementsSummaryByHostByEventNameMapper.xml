<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.EventsStatementsSummaryByHostByEventNameMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.EventsStatementsSummaryByHostByEventName">
    <result column="HOST" jdbcType="CHAR" property="host" />
    <result column="EVENT_NAME" jdbcType="VARCHAR" property="eventName" />
    <result column="COUNT_STAR" jdbcType="BIGINT" property="countStar" />
    <result column="SUM_TIMER_WAIT" jdbcType="BIGINT" property="sumTimerWait" />
    <result column="MIN_TIMER_WAIT" jdbcType="BIGINT" property="minTimerWait" />
    <result column="AVG_TIMER_WAIT" jdbcType="BIGINT" property="avgTimerWait" />
    <result column="MAX_TIMER_WAIT" jdbcType="BIGINT" property="maxTimerWait" />
    <result column="SUM_LOCK_TIME" jdbcType="BIGINT" property="sumLockTime" />
    <result column="SUM_ERRORS" jdbcType="BIGINT" property="sumErrors" />
    <result column="SUM_WARNINGS" jdbcType="BIGINT" property="sumWarnings" />
    <result column="SUM_ROWS_AFFECTED" jdbcType="BIGINT" property="sumRowsAffected" />
    <result column="SUM_ROWS_SENT" jdbcType="BIGINT" property="sumRowsSent" />
    <result column="SUM_ROWS_EXAMINED" jdbcType="BIGINT" property="sumRowsExamined" />
    <result column="SUM_CREATED_TMP_DISK_TABLES" jdbcType="BIGINT" property="sumCreatedTmpDiskTables" />
    <result column="SUM_CREATED_TMP_TABLES" jdbcType="BIGINT" property="sumCreatedTmpTables" />
    <result column="SUM_SELECT_FULL_JOIN" jdbcType="BIGINT" property="sumSelectFullJoin" />
    <result column="SUM_SELECT_FULL_RANGE_JOIN" jdbcType="BIGINT" property="sumSelectFullRangeJoin" />
    <result column="SUM_SELECT_RANGE" jdbcType="BIGINT" property="sumSelectRange" />
    <result column="SUM_SELECT_RANGE_CHECK" jdbcType="BIGINT" property="sumSelectRangeCheck" />
    <result column="SUM_SELECT_SCAN" jdbcType="BIGINT" property="sumSelectScan" />
    <result column="SUM_SORT_MERGE_PASSES" jdbcType="BIGINT" property="sumSortMergePasses" />
    <result column="SUM_SORT_RANGE" jdbcType="BIGINT" property="sumSortRange" />
    <result column="SUM_SORT_ROWS" jdbcType="BIGINT" property="sumSortRows" />
    <result column="SUM_SORT_SCAN" jdbcType="BIGINT" property="sumSortScan" />
    <result column="SUM_NO_INDEX_USED" jdbcType="BIGINT" property="sumNoIndexUsed" />
    <result column="SUM_NO_GOOD_INDEX_USED" jdbcType="BIGINT" property="sumNoGoodIndexUsed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    HOST, EVENT_NAME, COUNT_STAR, SUM_TIMER_WAIT, MIN_TIMER_WAIT, AVG_TIMER_WAIT, MAX_TIMER_WAIT, 
    SUM_LOCK_TIME, SUM_ERRORS, SUM_WARNINGS, SUM_ROWS_AFFECTED, SUM_ROWS_SENT, SUM_ROWS_EXAMINED, 
    SUM_CREATED_TMP_DISK_TABLES, SUM_CREATED_TMP_TABLES, SUM_SELECT_FULL_JOIN, SUM_SELECT_FULL_RANGE_JOIN, 
    SUM_SELECT_RANGE, SUM_SELECT_RANGE_CHECK, SUM_SELECT_SCAN, SUM_SORT_MERGE_PASSES, 
    SUM_SORT_RANGE, SUM_SORT_ROWS, SUM_SORT_SCAN, SUM_NO_INDEX_USED, SUM_NO_GOOD_INDEX_USED
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.EventsStatementsSummaryByHostByEventNameExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from events_statements_summary_by_host_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.EventsStatementsSummaryByHostByEventNameExample">
    delete from events_statements_summary_by_host_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.EventsStatementsSummaryByHostByEventName">
    insert into events_statements_summary_by_host_by_event_name (HOST, EVENT_NAME, COUNT_STAR, 
      SUM_TIMER_WAIT, MIN_TIMER_WAIT, AVG_TIMER_WAIT, 
      MAX_TIMER_WAIT, SUM_LOCK_TIME, SUM_ERRORS, 
      SUM_WARNINGS, SUM_ROWS_AFFECTED, SUM_ROWS_SENT, 
      SUM_ROWS_EXAMINED, SUM_CREATED_TMP_DISK_TABLES, 
      SUM_CREATED_TMP_TABLES, SUM_SELECT_FULL_JOIN, SUM_SELECT_FULL_RANGE_JOIN, 
      SUM_SELECT_RANGE, SUM_SELECT_RANGE_CHECK, SUM_SELECT_SCAN, 
      SUM_SORT_MERGE_PASSES, SUM_SORT_RANGE, SUM_SORT_ROWS, 
      SUM_SORT_SCAN, SUM_NO_INDEX_USED, SUM_NO_GOOD_INDEX_USED
      )
    values (#{host,jdbcType=CHAR}, #{eventName,jdbcType=VARCHAR}, #{countStar,jdbcType=BIGINT}, 
      #{sumTimerWait,jdbcType=BIGINT}, #{minTimerWait,jdbcType=BIGINT}, #{avgTimerWait,jdbcType=BIGINT}, 
      #{maxTimerWait,jdbcType=BIGINT}, #{sumLockTime,jdbcType=BIGINT}, #{sumErrors,jdbcType=BIGINT}, 
      #{sumWarnings,jdbcType=BIGINT}, #{sumRowsAffected,jdbcType=BIGINT}, #{sumRowsSent,jdbcType=BIGINT}, 
      #{sumRowsExamined,jdbcType=BIGINT}, #{sumCreatedTmpDiskTables,jdbcType=BIGINT}, 
      #{sumCreatedTmpTables,jdbcType=BIGINT}, #{sumSelectFullJoin,jdbcType=BIGINT}, #{sumSelectFullRangeJoin,jdbcType=BIGINT}, 
      #{sumSelectRange,jdbcType=BIGINT}, #{sumSelectRangeCheck,jdbcType=BIGINT}, #{sumSelectScan,jdbcType=BIGINT}, 
      #{sumSortMergePasses,jdbcType=BIGINT}, #{sumSortRange,jdbcType=BIGINT}, #{sumSortRows,jdbcType=BIGINT}, 
      #{sumSortScan,jdbcType=BIGINT}, #{sumNoIndexUsed,jdbcType=BIGINT}, #{sumNoGoodIndexUsed,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.EventsStatementsSummaryByHostByEventName">
    insert into events_statements_summary_by_host_by_event_name
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        HOST,
      </if>
      <if test="eventName != null">
        EVENT_NAME,
      </if>
      <if test="countStar != null">
        COUNT_STAR,
      </if>
      <if test="sumTimerWait != null">
        SUM_TIMER_WAIT,
      </if>
      <if test="minTimerWait != null">
        MIN_TIMER_WAIT,
      </if>
      <if test="avgTimerWait != null">
        AVG_TIMER_WAIT,
      </if>
      <if test="maxTimerWait != null">
        MAX_TIMER_WAIT,
      </if>
      <if test="sumLockTime != null">
        SUM_LOCK_TIME,
      </if>
      <if test="sumErrors != null">
        SUM_ERRORS,
      </if>
      <if test="sumWarnings != null">
        SUM_WARNINGS,
      </if>
      <if test="sumRowsAffected != null">
        SUM_ROWS_AFFECTED,
      </if>
      <if test="sumRowsSent != null">
        SUM_ROWS_SENT,
      </if>
      <if test="sumRowsExamined != null">
        SUM_ROWS_EXAMINED,
      </if>
      <if test="sumCreatedTmpDiskTables != null">
        SUM_CREATED_TMP_DISK_TABLES,
      </if>
      <if test="sumCreatedTmpTables != null">
        SUM_CREATED_TMP_TABLES,
      </if>
      <if test="sumSelectFullJoin != null">
        SUM_SELECT_FULL_JOIN,
      </if>
      <if test="sumSelectFullRangeJoin != null">
        SUM_SELECT_FULL_RANGE_JOIN,
      </if>
      <if test="sumSelectRange != null">
        SUM_SELECT_RANGE,
      </if>
      <if test="sumSelectRangeCheck != null">
        SUM_SELECT_RANGE_CHECK,
      </if>
      <if test="sumSelectScan != null">
        SUM_SELECT_SCAN,
      </if>
      <if test="sumSortMergePasses != null">
        SUM_SORT_MERGE_PASSES,
      </if>
      <if test="sumSortRange != null">
        SUM_SORT_RANGE,
      </if>
      <if test="sumSortRows != null">
        SUM_SORT_ROWS,
      </if>
      <if test="sumSortScan != null">
        SUM_SORT_SCAN,
      </if>
      <if test="sumNoIndexUsed != null">
        SUM_NO_INDEX_USED,
      </if>
      <if test="sumNoGoodIndexUsed != null">
        SUM_NO_GOOD_INDEX_USED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="countStar != null">
        #{countStar,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWait != null">
        #{sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="minTimerWait != null">
        #{minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWait != null">
        #{avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWait != null">
        #{maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="sumLockTime != null">
        #{sumLockTime,jdbcType=BIGINT},
      </if>
      <if test="sumErrors != null">
        #{sumErrors,jdbcType=BIGINT},
      </if>
      <if test="sumWarnings != null">
        #{sumWarnings,jdbcType=BIGINT},
      </if>
      <if test="sumRowsAffected != null">
        #{sumRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="sumRowsSent != null">
        #{sumRowsSent,jdbcType=BIGINT},
      </if>
      <if test="sumRowsExamined != null">
        #{sumRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="sumCreatedTmpDiskTables != null">
        #{sumCreatedTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="sumCreatedTmpTables != null">
        #{sumCreatedTmpTables,jdbcType=BIGINT},
      </if>
      <if test="sumSelectFullJoin != null">
        #{sumSelectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="sumSelectFullRangeJoin != null">
        #{sumSelectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="sumSelectRange != null">
        #{sumSelectRange,jdbcType=BIGINT},
      </if>
      <if test="sumSelectRangeCheck != null">
        #{sumSelectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="sumSelectScan != null">
        #{sumSelectScan,jdbcType=BIGINT},
      </if>
      <if test="sumSortMergePasses != null">
        #{sumSortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="sumSortRange != null">
        #{sumSortRange,jdbcType=BIGINT},
      </if>
      <if test="sumSortRows != null">
        #{sumSortRows,jdbcType=BIGINT},
      </if>
      <if test="sumSortScan != null">
        #{sumSortScan,jdbcType=BIGINT},
      </if>
      <if test="sumNoIndexUsed != null">
        #{sumNoIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="sumNoGoodIndexUsed != null">
        #{sumNoGoodIndexUsed,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.EventsStatementsSummaryByHostByEventNameExample" resultType="java.lang.Integer">
    select count(*) from events_statements_summary_by_host_by_event_name
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update events_statements_summary_by_host_by_event_name
    <set>
      <if test="record.host != null">
        HOST = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.eventName != null">
        EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.countStar != null">
        COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerWait != null">
        SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerWait != null">
        MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerWait != null">
        AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerWait != null">
        MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.sumLockTime != null">
        SUM_LOCK_TIME = #{record.sumLockTime,jdbcType=BIGINT},
      </if>
      <if test="record.sumErrors != null">
        SUM_ERRORS = #{record.sumErrors,jdbcType=BIGINT},
      </if>
      <if test="record.sumWarnings != null">
        SUM_WARNINGS = #{record.sumWarnings,jdbcType=BIGINT},
      </if>
      <if test="record.sumRowsAffected != null">
        SUM_ROWS_AFFECTED = #{record.sumRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="record.sumRowsSent != null">
        SUM_ROWS_SENT = #{record.sumRowsSent,jdbcType=BIGINT},
      </if>
      <if test="record.sumRowsExamined != null">
        SUM_ROWS_EXAMINED = #{record.sumRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="record.sumCreatedTmpDiskTables != null">
        SUM_CREATED_TMP_DISK_TABLES = #{record.sumCreatedTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="record.sumCreatedTmpTables != null">
        SUM_CREATED_TMP_TABLES = #{record.sumCreatedTmpTables,jdbcType=BIGINT},
      </if>
      <if test="record.sumSelectFullJoin != null">
        SUM_SELECT_FULL_JOIN = #{record.sumSelectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="record.sumSelectFullRangeJoin != null">
        SUM_SELECT_FULL_RANGE_JOIN = #{record.sumSelectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="record.sumSelectRange != null">
        SUM_SELECT_RANGE = #{record.sumSelectRange,jdbcType=BIGINT},
      </if>
      <if test="record.sumSelectRangeCheck != null">
        SUM_SELECT_RANGE_CHECK = #{record.sumSelectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="record.sumSelectScan != null">
        SUM_SELECT_SCAN = #{record.sumSelectScan,jdbcType=BIGINT},
      </if>
      <if test="record.sumSortMergePasses != null">
        SUM_SORT_MERGE_PASSES = #{record.sumSortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="record.sumSortRange != null">
        SUM_SORT_RANGE = #{record.sumSortRange,jdbcType=BIGINT},
      </if>
      <if test="record.sumSortRows != null">
        SUM_SORT_ROWS = #{record.sumSortRows,jdbcType=BIGINT},
      </if>
      <if test="record.sumSortScan != null">
        SUM_SORT_SCAN = #{record.sumSortScan,jdbcType=BIGINT},
      </if>
      <if test="record.sumNoIndexUsed != null">
        SUM_NO_INDEX_USED = #{record.sumNoIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="record.sumNoGoodIndexUsed != null">
        SUM_NO_GOOD_INDEX_USED = #{record.sumNoGoodIndexUsed,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update events_statements_summary_by_host_by_event_name
    set HOST = #{record.host,jdbcType=CHAR},
      EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      SUM_LOCK_TIME = #{record.sumLockTime,jdbcType=BIGINT},
      SUM_ERRORS = #{record.sumErrors,jdbcType=BIGINT},
      SUM_WARNINGS = #{record.sumWarnings,jdbcType=BIGINT},
      SUM_ROWS_AFFECTED = #{record.sumRowsAffected,jdbcType=BIGINT},
      SUM_ROWS_SENT = #{record.sumRowsSent,jdbcType=BIGINT},
      SUM_ROWS_EXAMINED = #{record.sumRowsExamined,jdbcType=BIGINT},
      SUM_CREATED_TMP_DISK_TABLES = #{record.sumCreatedTmpDiskTables,jdbcType=BIGINT},
      SUM_CREATED_TMP_TABLES = #{record.sumCreatedTmpTables,jdbcType=BIGINT},
      SUM_SELECT_FULL_JOIN = #{record.sumSelectFullJoin,jdbcType=BIGINT},
      SUM_SELECT_FULL_RANGE_JOIN = #{record.sumSelectFullRangeJoin,jdbcType=BIGINT},
      SUM_SELECT_RANGE = #{record.sumSelectRange,jdbcType=BIGINT},
      SUM_SELECT_RANGE_CHECK = #{record.sumSelectRangeCheck,jdbcType=BIGINT},
      SUM_SELECT_SCAN = #{record.sumSelectScan,jdbcType=BIGINT},
      SUM_SORT_MERGE_PASSES = #{record.sumSortMergePasses,jdbcType=BIGINT},
      SUM_SORT_RANGE = #{record.sumSortRange,jdbcType=BIGINT},
      SUM_SORT_ROWS = #{record.sumSortRows,jdbcType=BIGINT},
      SUM_SORT_SCAN = #{record.sumSortScan,jdbcType=BIGINT},
      SUM_NO_INDEX_USED = #{record.sumNoIndexUsed,jdbcType=BIGINT},
      SUM_NO_GOOD_INDEX_USED = #{record.sumNoGoodIndexUsed,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>