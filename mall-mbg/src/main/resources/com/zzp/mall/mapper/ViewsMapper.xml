<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.ViewsMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.Views">
    <result column="TABLE_CATALOG" jdbcType="VARCHAR" property="tableCatalog" />
    <result column="TABLE_SCHEMA" jdbcType="VARCHAR" property="tableSchema" />
    <result column="TABLE_NAME" jdbcType="VARCHAR" property="tableName" />
    <result column="CHECK_OPTION" jdbcType="CHAR" property="checkOption" />
    <result column="IS_UPDATABLE" jdbcType="CHAR" property="isUpdatable" />
    <result column="DEFINER" jdbcType="VARCHAR" property="definer" />
    <result column="SECURITY_TYPE" jdbcType="VARCHAR" property="securityType" />
    <result column="CHARACTER_SET_CLIENT" jdbcType="VARCHAR" property="characterSetClient" />
    <result column="COLLATION_CONNECTION" jdbcType="VARCHAR" property="collationConnection" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzp.mall.model.Views">
    <result column="VIEW_DEFINITION" jdbcType="LONGVARCHAR" property="viewDefinition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, CHECK_OPTION, IS_UPDATABLE, DEFINER, SECURITY_TYPE, 
    CHARACTER_SET_CLIENT, COLLATION_CONNECTION
  </sql>
  <sql id="Blob_Column_List">
    VIEW_DEFINITION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzp.mall.model.ViewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from VIEWS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzp.mall.model.ViewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from VIEWS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.ViewsExample">
    delete from VIEWS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.Views">
    insert into VIEWS (TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, 
      CHECK_OPTION, IS_UPDATABLE, DEFINER, 
      SECURITY_TYPE, CHARACTER_SET_CLIENT, COLLATION_CONNECTION, 
      VIEW_DEFINITION)
    values (#{tableCatalog,jdbcType=VARCHAR}, #{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, 
      #{checkOption,jdbcType=CHAR}, #{isUpdatable,jdbcType=CHAR}, #{definer,jdbcType=VARCHAR}, 
      #{securityType,jdbcType=VARCHAR}, #{characterSetClient,jdbcType=VARCHAR}, #{collationConnection,jdbcType=VARCHAR}, 
      #{viewDefinition,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.Views">
    insert into VIEWS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tableCatalog != null">
        TABLE_CATALOG,
      </if>
      <if test="tableSchema != null">
        TABLE_SCHEMA,
      </if>
      <if test="tableName != null">
        TABLE_NAME,
      </if>
      <if test="checkOption != null">
        CHECK_OPTION,
      </if>
      <if test="isUpdatable != null">
        IS_UPDATABLE,
      </if>
      <if test="definer != null">
        DEFINER,
      </if>
      <if test="securityType != null">
        SECURITY_TYPE,
      </if>
      <if test="characterSetClient != null">
        CHARACTER_SET_CLIENT,
      </if>
      <if test="collationConnection != null">
        COLLATION_CONNECTION,
      </if>
      <if test="viewDefinition != null">
        VIEW_DEFINITION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tableCatalog != null">
        #{tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="tableSchema != null">
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="checkOption != null">
        #{checkOption,jdbcType=CHAR},
      </if>
      <if test="isUpdatable != null">
        #{isUpdatable,jdbcType=CHAR},
      </if>
      <if test="definer != null">
        #{definer,jdbcType=VARCHAR},
      </if>
      <if test="securityType != null">
        #{securityType,jdbcType=VARCHAR},
      </if>
      <if test="characterSetClient != null">
        #{characterSetClient,jdbcType=VARCHAR},
      </if>
      <if test="collationConnection != null">
        #{collationConnection,jdbcType=VARCHAR},
      </if>
      <if test="viewDefinition != null">
        #{viewDefinition,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.ViewsExample" resultType="java.lang.Integer">
    select count(*) from VIEWS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update VIEWS
    <set>
      <if test="record.tableCatalog != null">
        TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.tableSchema != null">
        TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null">
        TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOption != null">
        CHECK_OPTION = #{record.checkOption,jdbcType=CHAR},
      </if>
      <if test="record.isUpdatable != null">
        IS_UPDATABLE = #{record.isUpdatable,jdbcType=CHAR},
      </if>
      <if test="record.definer != null">
        DEFINER = #{record.definer,jdbcType=VARCHAR},
      </if>
      <if test="record.securityType != null">
        SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      </if>
      <if test="record.characterSetClient != null">
        CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      </if>
      <if test="record.collationConnection != null">
        COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR},
      </if>
      <if test="record.viewDefinition != null">
        VIEW_DEFINITION = #{record.viewDefinition,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update VIEWS
    set TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      CHECK_OPTION = #{record.checkOption,jdbcType=CHAR},
      IS_UPDATABLE = #{record.isUpdatable,jdbcType=CHAR},
      DEFINER = #{record.definer,jdbcType=VARCHAR},
      SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR},
      VIEW_DEFINITION = #{record.viewDefinition,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update VIEWS
    set TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      CHECK_OPTION = #{record.checkOption,jdbcType=CHAR},
      IS_UPDATABLE = #{record.isUpdatable,jdbcType=CHAR},
      DEFINER = #{record.definer,jdbcType=VARCHAR},
      SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>