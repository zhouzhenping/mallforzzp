<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.RoleEdgesMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.RoleEdges">
    <id column="FROM_HOST" jdbcType="CHAR" property="fromHost" />
    <id column="FROM_USER" jdbcType="CHAR" property="fromUser" />
    <id column="TO_HOST" jdbcType="CHAR" property="toHost" />
    <id column="TO_USER" jdbcType="CHAR" property="toUser" />
    <result column="WITH_ADMIN_OPTION" jdbcType="CHAR" property="withAdminOption" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FROM_HOST, FROM_USER, TO_HOST, TO_USER, WITH_ADMIN_OPTION
  </sql>
  <select id="selectByExample" parameterType="com.zzp.mall.model.RoleEdgesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_edges
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_edges
    where FROM_HOST = #{fromHost,jdbcType=CHAR}
      and FROM_USER = #{fromUser,jdbcType=CHAR}
      and TO_HOST = #{toHost,jdbcType=CHAR}
      and TO_USER = #{toUser,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from role_edges
    where FROM_HOST = #{fromHost,jdbcType=CHAR}
      and FROM_USER = #{fromUser,jdbcType=CHAR}
      and TO_HOST = #{toHost,jdbcType=CHAR}
      and TO_USER = #{toUser,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.RoleEdgesExample">
    delete from role_edges
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.RoleEdges">
    insert into role_edges (FROM_HOST, FROM_USER, TO_HOST, 
      TO_USER, WITH_ADMIN_OPTION)
    values (#{fromHost,jdbcType=CHAR}, #{fromUser,jdbcType=CHAR}, #{toHost,jdbcType=CHAR}, 
      #{toUser,jdbcType=CHAR}, #{withAdminOption,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.RoleEdges">
    insert into role_edges
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromHost != null">
        FROM_HOST,
      </if>
      <if test="fromUser != null">
        FROM_USER,
      </if>
      <if test="toHost != null">
        TO_HOST,
      </if>
      <if test="toUser != null">
        TO_USER,
      </if>
      <if test="withAdminOption != null">
        WITH_ADMIN_OPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromHost != null">
        #{fromHost,jdbcType=CHAR},
      </if>
      <if test="fromUser != null">
        #{fromUser,jdbcType=CHAR},
      </if>
      <if test="toHost != null">
        #{toHost,jdbcType=CHAR},
      </if>
      <if test="toUser != null">
        #{toUser,jdbcType=CHAR},
      </if>
      <if test="withAdminOption != null">
        #{withAdminOption,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.RoleEdgesExample" resultType="java.lang.Integer">
    select count(*) from role_edges
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role_edges
    <set>
      <if test="record.fromHost != null">
        FROM_HOST = #{record.fromHost,jdbcType=CHAR},
      </if>
      <if test="record.fromUser != null">
        FROM_USER = #{record.fromUser,jdbcType=CHAR},
      </if>
      <if test="record.toHost != null">
        TO_HOST = #{record.toHost,jdbcType=CHAR},
      </if>
      <if test="record.toUser != null">
        TO_USER = #{record.toUser,jdbcType=CHAR},
      </if>
      <if test="record.withAdminOption != null">
        WITH_ADMIN_OPTION = #{record.withAdminOption,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role_edges
    set FROM_HOST = #{record.fromHost,jdbcType=CHAR},
      FROM_USER = #{record.fromUser,jdbcType=CHAR},
      TO_HOST = #{record.toHost,jdbcType=CHAR},
      TO_USER = #{record.toUser,jdbcType=CHAR},
      WITH_ADMIN_OPTION = #{record.withAdminOption,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.RoleEdges">
    update role_edges
    <set>
      <if test="withAdminOption != null">
        WITH_ADMIN_OPTION = #{withAdminOption,jdbcType=CHAR},
      </if>
    </set>
    where FROM_HOST = #{fromHost,jdbcType=CHAR}
      and FROM_USER = #{fromUser,jdbcType=CHAR}
      and TO_HOST = #{toHost,jdbcType=CHAR}
      and TO_USER = #{toUser,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzp.mall.model.RoleEdges">
    update role_edges
    set WITH_ADMIN_OPTION = #{withAdminOption,jdbcType=CHAR}
    where FROM_HOST = #{fromHost,jdbcType=CHAR}
      and FROM_USER = #{fromUser,jdbcType=CHAR}
      and TO_HOST = #{toHost,jdbcType=CHAR}
      and TO_USER = #{toUser,jdbcType=CHAR}
  </update>
</mapper>