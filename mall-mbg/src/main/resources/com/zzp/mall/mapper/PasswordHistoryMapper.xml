<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.PasswordHistoryMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.PasswordHistory">
    <id column="Host" jdbcType="CHAR" property="host" />
    <id column="User" jdbcType="CHAR" property="user" />
    <id column="Password_timestamp" jdbcType="TIMESTAMP" property="passwordTimestamp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzp.mall.model.PasswordHistory">
    <result column="Password" jdbcType="LONGVARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Host, User, Password_timestamp
  </sql>
  <sql id="Blob_Column_List">
    Password
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzp.mall.model.PasswordHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from password_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzp.mall.model.PasswordHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from password_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from password_history
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Password_timestamp = #{passwordTimestamp,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from password_history
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Password_timestamp = #{passwordTimestamp,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.PasswordHistoryExample">
    delete from password_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.PasswordHistory">
    insert into password_history (Host, User, Password_timestamp, 
      Password)
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{passwordTimestamp,jdbcType=TIMESTAMP}, 
      #{password,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.PasswordHistory">
    insert into password_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="passwordTimestamp != null">
        Password_timestamp,
      </if>
      <if test="password != null">
        Password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="passwordTimestamp != null">
        #{passwordTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.PasswordHistoryExample" resultType="java.lang.Integer">
    select count(*) from password_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update password_history
    <set>
      <if test="record.host != null">
        Host = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.user != null">
        User = #{record.user,jdbcType=CHAR},
      </if>
      <if test="record.passwordTimestamp != null">
        Password_timestamp = #{record.passwordTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update password_history
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Password_timestamp = #{record.passwordTimestamp,jdbcType=TIMESTAMP},
      Password = #{record.password,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update password_history
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Password_timestamp = #{record.passwordTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzp.mall.model.PasswordHistory">
    update password_history
    <set>
      <if test="password != null">
        Password = #{password,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Password_timestamp = #{passwordTimestamp,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzp.mall.model.PasswordHistory">
    update password_history
    set Password = #{password,jdbcType=LONGVARCHAR}
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Password_timestamp = #{passwordTimestamp,jdbcType=TIMESTAMP}
  </update>
</mapper>