<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.mall.mapper.SchemataMapper">
  <resultMap id="BaseResultMap" type="com.zzp.mall.model.Schemata">
    <result column="CATALOG_NAME" jdbcType="VARCHAR" property="catalogName" />
    <result column="SCHEMA_NAME" jdbcType="VARCHAR" property="schemaName" />
    <result column="DEFAULT_CHARACTER_SET_NAME" jdbcType="VARCHAR" property="defaultCharacterSetName" />
    <result column="DEFAULT_COLLATION_NAME" jdbcType="VARCHAR" property="defaultCollationName" />
    <result column="DEFAULT_ENCRYPTION" jdbcType="CHAR" property="defaultEncryption" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzp.mall.model.Schemata">
    <result column="SQL_PATH" jdbcType="BINARY" property="sqlPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CATALOG_NAME, SCHEMA_NAME, DEFAULT_CHARACTER_SET_NAME, DEFAULT_COLLATION_NAME, DEFAULT_ENCRYPTION
  </sql>
  <sql id="Blob_Column_List">
    SQL_PATH
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzp.mall.model.SchemataExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from SCHEMATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzp.mall.model.SchemataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SCHEMATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzp.mall.model.SchemataExample">
    delete from SCHEMATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzp.mall.model.Schemata">
    insert into SCHEMATA (CATALOG_NAME, SCHEMA_NAME, DEFAULT_CHARACTER_SET_NAME, 
      DEFAULT_COLLATION_NAME, DEFAULT_ENCRYPTION, SQL_PATH
      )
    values (#{catalogName,jdbcType=VARCHAR}, #{schemaName,jdbcType=VARCHAR}, #{defaultCharacterSetName,jdbcType=VARCHAR}, 
      #{defaultCollationName,jdbcType=VARCHAR}, #{defaultEncryption,jdbcType=CHAR}, #{sqlPath,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzp.mall.model.Schemata">
    insert into SCHEMATA
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="catalogName != null">
        CATALOG_NAME,
      </if>
      <if test="schemaName != null">
        SCHEMA_NAME,
      </if>
      <if test="defaultCharacterSetName != null">
        DEFAULT_CHARACTER_SET_NAME,
      </if>
      <if test="defaultCollationName != null">
        DEFAULT_COLLATION_NAME,
      </if>
      <if test="defaultEncryption != null">
        DEFAULT_ENCRYPTION,
      </if>
      <if test="sqlPath != null">
        SQL_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="catalogName != null">
        #{catalogName,jdbcType=VARCHAR},
      </if>
      <if test="schemaName != null">
        #{schemaName,jdbcType=VARCHAR},
      </if>
      <if test="defaultCharacterSetName != null">
        #{defaultCharacterSetName,jdbcType=VARCHAR},
      </if>
      <if test="defaultCollationName != null">
        #{defaultCollationName,jdbcType=VARCHAR},
      </if>
      <if test="defaultEncryption != null">
        #{defaultEncryption,jdbcType=CHAR},
      </if>
      <if test="sqlPath != null">
        #{sqlPath,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzp.mall.model.SchemataExample" resultType="java.lang.Integer">
    select count(*) from SCHEMATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SCHEMATA
    <set>
      <if test="record.catalogName != null">
        CATALOG_NAME = #{record.catalogName,jdbcType=VARCHAR},
      </if>
      <if test="record.schemaName != null">
        SCHEMA_NAME = #{record.schemaName,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultCharacterSetName != null">
        DEFAULT_CHARACTER_SET_NAME = #{record.defaultCharacterSetName,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultCollationName != null">
        DEFAULT_COLLATION_NAME = #{record.defaultCollationName,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultEncryption != null">
        DEFAULT_ENCRYPTION = #{record.defaultEncryption,jdbcType=CHAR},
      </if>
      <if test="record.sqlPath != null">
        SQL_PATH = #{record.sqlPath,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update SCHEMATA
    set CATALOG_NAME = #{record.catalogName,jdbcType=VARCHAR},
      SCHEMA_NAME = #{record.schemaName,jdbcType=VARCHAR},
      DEFAULT_CHARACTER_SET_NAME = #{record.defaultCharacterSetName,jdbcType=VARCHAR},
      DEFAULT_COLLATION_NAME = #{record.defaultCollationName,jdbcType=VARCHAR},
      DEFAULT_ENCRYPTION = #{record.defaultEncryption,jdbcType=CHAR},
      SQL_PATH = #{record.sqlPath,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SCHEMATA
    set CATALOG_NAME = #{record.catalogName,jdbcType=VARCHAR},
      SCHEMA_NAME = #{record.schemaName,jdbcType=VARCHAR},
      DEFAULT_CHARACTER_SET_NAME = #{record.defaultCharacterSetName,jdbcType=VARCHAR},
      DEFAULT_COLLATION_NAME = #{record.defaultCollationName,jdbcType=VARCHAR},
      DEFAULT_ENCRYPTION = #{record.defaultEncryption,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>